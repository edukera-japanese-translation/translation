axiom_Antonym1_diagnostic = 反意性
axiom_Antonym1_justification = 「若い」と「古い」の反意語によって
axiom_Antonym2_diagnostic = 反意性
axiom_Antonym2_justification = 「若い」と「古い」の反意語によって
axiom_Superlative1_diagnostic = 一意性
axiom_Superlative1_justification = 最年少の一意性によって、
axiom_Superlative2_diagnostic = 一意性
axiom_Superlative2_justification = 最古の一意性により
axiom_adabsurdium_diagnostic = 不合理
axiom_adabsurdium_justification = 矛盾によって
axiom_addsub_diagnostic = 加減
axiom_addsub_justification = 加算および減算することにより{1}の{0}
axiom_app_def_diagnostic = アプリケーション
axiom_app_def_justification = 定義により{0}に適用{1}
axiom_app_sqrt_bounded_diagnostic = 平方根
axiom_app_sqrt_bounded_justification = 平方根を適用することにより、
axiom_app_sqrt_diagnostic = 平方根
axiom_app_sqrt_justification = 平方根を適用することにより、
axiom_app_square_bounded_diagnostic = 広場
axiom_app_square_bounded_justification = 広場を通過させることにより
axiom_app_square_diagnostic = 広場
axiom_app_square_justification = 広場を通過させることにより
axiom_apply_forall_diagnostic = アプリケーション
axiom_apply_forall_justification = 適用による{0}
axiom_apply_fun_lr_diagnostic = 機能的適用
axiom_apply_fun_lr_justification = 左と右適用することによって、 {0}
axiom_apply_ineq_inverse_diagnostic = リバース
axiom_apply_ineq_inverse_justification = *ℝの逆関数を減少させることによって
axiom_apply_ineq_sqrt_diagnostic = 平方根
axiom_apply_ineq_sqrt_justification = 平方根を適用することにより、
axiom_apply_ineq_square_diagnostic = 広場
axiom_apply_ineq_square_justification = 広場を通過させることにより
axiom_arith_def_diagnostic = 定義
axiom_arith_def_justification = 等差数列によってdefnition
axiom_arith_pro_diagnostic = 明示的製剤
axiom_arith_pro_justification = 等差数列の明示的な処方によって
axiom_ax_bad_diagnostic = 最悪の嘘
axiom_ax_bad_justification = mesonge最悪によって
axiom_ax_good_diagnostic = 純粋な真実
axiom_ax_good_justification = 純粋な真実によります
axiom_back_elim_equiv_diagnostic = 定義
axiom_back_elim_equiv_justification = 同値の定義により、
axiom_bound_conj_diagnostic = 定義
axiom_bound_conj_justification = ダブル不平等の定義により、
axiom_bound_to_eq_diagnostic = 骨組み
axiom_bound_to_eq_justification = 値によって広範な監督によって
axiom_bounded_elim_diagnostic = 骨組み
axiom_bounded_elim_justification = 定義により
axiom_case_base_binary_diagnostic = 排中律
axiom_case_base_binary_justification = 除外層を適用することにより、
axiom_case_base_diagnostic = 和の場合
axiom_case_base_justification = 選言の場合
axiom_case_good_or_bad_diagnostic = 純粋な論理和または悪化
axiom_case_good_or_bad_justification = 純粋または純粋な論理和によって
axiom_comb_comp_lt_diagnostic = 構図
axiom_comb_comp_lt_justification = 介在物の組成物による
axiom_combadd_diagnostic = 追加
axiom_combadd_justification = 追加することにより、
axiom_combine_cmp_minus_diagnostic = 引き算
axiom_combine_cmp_minus_justification = 不平等の減算することにより
axiom_combine_cmp_plus_diagnostic = 追加
axiom_combine_cmp_plus_justification = 不等式を添加することにより
axiom_combsub_diagnostic = 引き算
axiom_combsub_justification = 減算することにより、
axiom_commutativity_diagnostic = 交換性
axiom_commutativity_justification = 可換によります
axiom_conj_diagnostic = 接続詞
axiom_conj_justification = 併せによってdefnition
axiom_deduce_not_color_diagnostic = バイナリカラー
axiom_deduce_not_color_justification = 帽子のバイナリ色で
axiom_def_fbij_diagnostic = 全単射関数
axiom_def_fbij_justification = 全単射関数を定義することにより、
axiom_def_fcomp_diagnostic = 組成fontions
axiom_def_fcomp_justification = 定義関数組成物による
axiom_def_finj_diagnostic = 単射
axiom_def_finj_justification = 単射関数の定義により、
axiom_def_finvol_diagnostic = 退縮
axiom_def_finvol_justification = 機能の退縮を定義することで、
axiom_def_fsurj_diagnostic = 全射
axiom_def_fsurj_justification = 関数全射を定義することで、
axiom_def_rantisym_diagnostic = antsymétrique
axiom_def_rantisym_justification = スキューの関係を定義することによって、
axiom_def_rcomp_diagnostic = 構図
axiom_def_rcomp_justification = 組成の関係を定義することによって、
axiom_def_rfun_diagnostic = 機能的な
axiom_def_rfun_justification = 機能的な関係を定義すること
axiom_def_rident_diagnostic = アイデンティティ
axiom_def_rident_justification = アイデンティティ関係の定義により、
axiom_def_rinj_diagnostic = 単射
axiom_def_rinj_justification = 定義により関係単射
axiom_def_rinv_diagnostic = リバース
axiom_def_rinv_justification = 逆の関係の定義により、
axiom_def_rrefl_diagnostic = 反射的
axiom_def_rrefl_justification = 再帰的な関係を定義することによって、
axiom_def_rsurj_diagnostic = 全射
axiom_def_rsurj_justification = 関係を定義することで全射
axiom_def_rsym_diagnostic = 対称な
axiom_def_rsym_justification = 対称的な関係を定義することによって、
axiom_def_rtotleft_diagnostic = 総左
axiom_def_rtotleft_justification = 合計の関係を定義することによって左
axiom_def_rtrans_diagnostic = 他動詞
axiom_def_rtrans_justification = 推移関係の定義により、
axiom_elim_comp_diagnostic = ワイド不平等
axiom_elim_comp_justification = 広い不平等の定義により、
axiom_elim_conj_left_diagnostic = 控除左
axiom_elim_conj_left_justification = 左控除して
axiom_elim_conj_right_diagnostic = 控除権
axiom_elim_conj_right_justification = 控除の権利によって
axiom_elim_eqfun_diagnostic = 機能的平等
axiom_elim_eqfun_justification = 機能的平等の定義により、
axiom_elim_eqset_diagnostic = 平等
axiom_elim_eqset_justification = セットの平等の定義により、
axiom_elim_even_def_diagnostic = パリティ
axiom_elim_even_def_justification = パリティの定義により、
axiom_elim_false_exset_diagnostic = 空集合
axiom_elim_false_exset_justification = 空集合の定義により、
axiom_elim_gen_app_rel_diagnostic = グラフ
axiom_elim_gen_app_rel_justification = 関係のグラフの定義により、
axiom_elim_has_finite_limit_decr_diagnostic = 減少コンバージェンス
axiom_elim_has_finite_limit_decr_justification = 腐敗と値下げによって、
axiom_elim_has_finite_limit_incr_diagnostic = 収束coissante
axiom_elim_has_finite_limit_incr_justification = 成長と増加によって、
axiom_elim_is_elem_universe_diagnostic = 宇宙
axiom_elim_is_elem_universe_justification = 宇宙の定義により、
axiom_elim_multiple_diagnostic = 定義
axiom_elim_multiple_justification = 割り切れるの定義により、
axiom_elim_negation_diagnostic = 定義
axiom_elim_negation_justification = 否定の定義により、
axiom_elim_pprod_diagnostic = デカルト積
axiom_elim_pprod_justification = 直積の定義により、
axiom_elim_requiv_diagnostic = 等価
axiom_elim_requiv_justification = 同値関係を定義することで、
axiom_elim_scomp_diagnostic = 補数
axiom_elim_scomp_justification = 補体の定義により、
axiom_elim_sdiff_diagnostic = 違い
axiom_elim_sdiff_justification = 差集合の定義により、
axiom_elim_sequiv_diagnostic = 同値類
axiom_elim_sequiv_justification = 等価クラスの定義により、
axiom_elim_set_lteq_diagnostic = インクルージョン
axiom_elim_set_lteq_justification = インクルージョンの定義により、
axiom_elim_shas_lower_bound_diagnostic = 下界
axiom_elim_shas_lower_bound_justification = 定義により
axiom_elim_shas_upper_bound_diagnostic = 上界
axiom_elim_shas_upper_bound_justification = 定義により
axiom_elim_sinter_diagnostic = 交差点
axiom_elim_sinter_justification = 交差点の定義により、
axiom_elim_sis_decreasing_diagnostic = 減少
axiom_elim_sis_decreasing_justification = 定義により
axiom_elim_sis_gt_zero_diagnostic = 厳密に正
axiom_elim_sis_gt_zero_justification = 定義により
axiom_elim_sis_increasing_diagnostic = 成長
axiom_elim_sis_increasing_justification = 定義により
axiom_elim_sis_lt_zero_diagnostic = 厳密に負
axiom_elim_sis_lt_zero_justification = 定義により
axiom_elim_subset_diagnostic = セットのサブセット
axiom_elim_subset_justification = セットの部品を定義することで、
axiom_elim_sunion_diagnostic = 組合
axiom_elim_sunion_justification = 組合の定義により、
axiom_elim_true_at_rank_diagnostic = Pの定義
axiom_elim_true_at_rank_justification = 定義により{0}
axiom_eq_inverse_diagnostic = リバース
axiom_eq_inverse_justification = 逆に変化させることにより、
axiom_eq_reverse_diagnostic = 反対
axiom_eq_reverse_justification = 通路lopposéによって
axiom_eq_symmetry_diagnostic = 対称性
axiom_eq_symmetry_justification = 平等の関係の対称性によって、
axiom_eq_trans_diagnostic = 移行性
axiom_eq_trans_justification = 平等の関係の推移によって、
axiom_equiv_rtrans_diagnostic = 他動詞
axiom_equiv_rtrans_justification = 推移関係の設定、特性化することにより
axiom_ex_elim_diagnostic = 抽出による
axiom_ex_elim_justification = 証人の抽出による
axiom_ex_intro_diagnostic = 構築することにより、
axiom_ex_intro_justification = 証人を構築することにより、
axiom_expand_diagnostic = 開発
axiom_expand_justification = 開発によって
axiom_factorize_diagnostic = 顕著因数分解
axiom_factorize_justification = 分解{1}
axiom_falseall_diagnostic = 例Falsoクオドリベット
axiom_falseall_justification = 矛盾の控除によって、
axiom_gen_factorize_diagnostic = 因数分解
axiom_gen_factorize_justification = 因数分解することにより、 {0}により{1}
axiom_geo_def_diagnostic = 定義
axiom_geo_def_justification = 定義により、等比数列
axiom_geo_pro_diagnostic = 明示的製剤
axiom_geo_pro_justification = 等比数列の明示的な処方によって
axiom_inclusionsimpl_diagnostic = 簡素化
axiom_inclusionsimpl_justification = 書き換えることにより、 {1}で{0}
axiom_ind_basic_forall_diagnostic = 再発
axiom_ind_basic_forall_justification = 誘導による
axiom_ind_init_diagnostic = から再発
axiom_ind_init_justification = 誘導による
axiom_ineq_sym_rew_diagnostic = 逆数
axiom_ineq_sym_rew_justification = 逆数書き換えによって
axiom_intro_false_diagnostic = 矛盾のないこと
axiom_intro_false_justification = 非矛盾の原則によって、
axiom_intro_or_left_diagnostic = 左寄せ
axiom_intro_or_left_justification = 左正当化することにより
axiom_intro_or_right_diagnostic = 右寄せ
axiom_intro_or_right_justification = 右寄せによります
axiom_intro_sqrt_square_diagnostic = 平方根
axiom_intro_sqrt_square_justification = 正方形のルートを簡素化することにより、
axiom_limit_finite_diagnostic = 有限の極限
axiom_limit_finite_justification = 有限限界を計算することにより、
axiom_limit_inf_diagnostic = リミット+∞
axiom_limit_inf_justification = ∞+に制限コンピューティングによって、
axiom_limit_neg_inf_diagnostic = 制限-∞
axiom_limit_neg_inf_justification = -∞する計算による制限
axiom_linearsimpl_diagnostic = 簡素化
axiom_linearsimpl_justification = 簡素化により{0}
axiom_lradd_bounded_diagnostic = 追加
axiom_lradd_bounded_justification = 左と右に添加することにより{0}
axiom_lradd_diagnostic = 追加
axiom_lradd_ineq_diagnostic = 追加
axiom_lradd_ineq_justification = 左と右に添加することにより{0}
axiom_lradd_justification = 左と右に添加することにより{0}
axiom_lradd_neq_diagnostic = 追加
axiom_lradd_neq_justification = 左と右に添加することにより{0}
axiom_lrdiv_bounded_diagnostic = 除算
axiom_lrdiv_bounded_justification = 左右に分割{0}
axiom_lrdiv_diagnostic = 除算
axiom_lrdiv_ineq_diagnostic = 除算
axiom_lrdiv_ineq_justification = 左右に分割{0}
axiom_lrdiv_justification = 左右に分割{0}
axiom_lrdiv_neq_diagnostic = 除算
axiom_lrdiv_neq_justification = 左右に分割{0}
axiom_lrmul_bounded_diagnostic = 乗算
axiom_lrmul_bounded_justification = 左右を乗算することにより、 {0}
axiom_lrmul_diagnostic = 乗算
axiom_lrmul_ineq_diagnostic = 乗算
axiom_lrmul_ineq_justification = 左右を乗算することにより、 {0}
axiom_lrmul_justification = 左右を乗算することにより、 {0}
axiom_lrmul_neq_diagnostic = 乗算
axiom_lrmul_neq_justification = 左右を乗算することにより、 {0}
axiom_lrsub_bounded_diagnostic = 引き算
axiom_lrsub_bounded_justification = 左と右を減算することにより、 {0}
axiom_lrsub_diagnostic = 引き算
axiom_lrsub_ineq_diagnostic = 引き算
axiom_lrsub_ineq_justification = 左と右を減算することにより、 {0}
axiom_lrsub_justification = 左と右を減算することにより、 {0}
axiom_lrsub_neq_diagnostic = 引き算
axiom_lrsub_neq_justification = 左と右を減算することにより、 {0}
axiom_lt_next_int_diagnostic = 次の整数
axiom_lt_next_int_justification = 次の整数への移行によって、
axiom_modus_ponens_diagnostic = 手口のponens
axiom_modus_ponens_justification = 肯定式を適用することにより、
axiom_muldiv_diagnostic = ハイとローの乗算
axiom_muldiv_justification = 高および低乗算することにより{1}
axiom_neq_symmetry_diagnostic = 対称性
axiom_neq_symmetry_justification = 不平等の関係の対称性によって、
axiom_non_zero_gt_diagnostic = 厳格な優位性
axiom_non_zero_gt_justification = 厳格な優位性によって、
axiom_non_zero_lt_diagnostic = 厳格な劣等感
axiom_non_zero_lt_justification = 厳格な劣等によって
axiom_polysquare_diagnostic = 正方形の多項式
axiom_polysquare_justification = 正方形の同定により{0}
axiom_proddecompl_diagnostic = 分解
axiom_proddecompl_justification = 製品の分解による
axiom_proddef_diagnostic = Assocication
axiom_proddef_justification = オペレータ製品の連想によって適用される{0}
axiom_prodinverse_diagnostic = ルートダウン
axiom_prodinverse_justification = ルート後方インデックスで
axiom_prodlinear_diagnostic = 結合性
axiom_prodlinear_justification = オペレータ製品の連想によって適用される{0}
axiom_prodresult1_diagnostic = prodresult1
axiom_prodresult1_justification = prodresuult1
axiom_prodsimpl_diagnostic = prodsimpl
axiom_prodsimpl_justification = prodsimpl
axiom_produpshift_diagnostic = オフセットインデックス
axiom_produpshift_justification = インデックスをシフトすることにより、
axiom_reason_capacity_diagnostic = 推論する能力
axiom_reason_capacity_justification = 推論する帽子の着用者の能力によって
axiom_red_true_at_rank_diagnostic = 定義
axiom_red_true_at_rank_justification = 定義により{0}
axiom_reducedenom_diagnostic = 共通点
axiom_reducedenom_justification = 同じ分母への還元により
axiom_rewriting_diagnostic = リライト
axiom_rewriting_justification = 書き換えることにより、 {0}で{1}
axiom_sandwich_diagnostic = 憲兵
axiom_sandwich_justification = はさみうちの原理
axiom_section_diagnostic = 作成スコープ
axiom_section_justification = デモ
axiom_set_absorb_diagnostic = た吸収
axiom_set_absorb_justification = 吸収による
axiom_set_adabsurdum_diagnostic = 不合理
axiom_set_adabsurdum_justification = 退縮の補数によって
axiom_set_demorgan_diagnostic = ド・モルガンの法則
axiom_set_demorgan_justification = ド・モルガンの法則に従って
axiom_set_eq_symmetry_diagnostic = 対称性
axiom_set_eq_symmetry_justification = 平等の関係の対称性によって、
axiom_set_eq_trans_diagnostic = 移行性
axiom_set_eq_trans_justification = 平等の関係の推移によって、
axiom_set_excluded_diagnostic = 排中律
axiom_set_excluded_justification = 除外を適用することによって
axiom_set_inter_comb_diagnostic = 交差点
axiom_set_inter_comb_justification = 左右の交差することにより、
axiom_set_lteq_transitivity_diagnostic = 移行性
axiom_set_lteq_transitivity_justification = インクルージョンの推移によって、
axiom_set_neutral_diagnostic = 単位元
axiom_set_neutral_justification = identity要素の所有権によって、
axiom_set_rewriting_diagnostic = リライト
axiom_set_rewriting_justification = 書き換えることにより、 {0}で{1}
axiom_set_union_comb_diagnostic = 組合
axiom_set_union_comb_justification = 組合によって左右
axiom_setassociative_diagnostic = 結合性
axiom_setassociative_justification = 連想によって
axiom_setcommutative_diagnostic = 交換性
axiom_setcommutative_justification = 可換によります
axiom_setdevelopp_diagnostic = 開発
axiom_setdevelopp_justification = 開発によって
axiom_setfactorize_diagnostic = 因数分解
axiom_setfactorize_justification = 因数分解
axiom_sigmadecompl_diagnostic = 分解
axiom_sigmadecompl_justification = シグマの分解による
axiom_sigmadef_diagnostic = 協会
axiom_sigmadef_justification = 連想オペレータによってシグマに適用{0}
axiom_sigmainverse_diagnostic = ルートダウン
axiom_sigmainverse_justification = ルート後方インデックスで
axiom_sigmalinear_diagnostic = 直線性
axiom_sigmalinear_justification = 直線シグマのオペレータによって適用される{0}
axiom_sigmaresult1_diagnostic = 素数
axiom_sigmaresult1_justification = 最初の整数の和で
axiom_sigmaresult2_diagnostic = 最初の正方形
axiom_sigmaresult2_justification = 最初の正方形の和によって
axiom_sigmaresult3_diagnostic = 最初の力
axiom_sigmaresult3_justification = 最初の電力の合計によって、
axiom_sigmasimpl_diagnostic = 集計
axiom_sigmasimpl_justification = 定数1の和で
axiom_sigmaupshift_diagnostic = オフセットインデックス
axiom_sigmaupshift_justification = インデックスをシフトすることにより、
axiom_slim_def_elim_diagnostic = 有限の極限
axiom_slim_def_elim_justification = 制限の定義により、
axiom_slim_inf_def_elim_diagnostic = 無限の限界
axiom_slim_inf_def_elim_justification = 無限LIMTの定義により、
axiom_slimfinite_inf_elim_diagnostic = 無限の限界
axiom_slimfinite_inf_elim_justification = 
axiom_square_diff_diagnostic = 正方形の違い
axiom_square_diff_justification = 平方差の因数分解することにより
axiom_subadd_diagnostic = 加減
axiom_subadd_justification = 減算との添加により{1}の{0}
axiom_trans_lt_gt_diagnostic = 移行性
axiom_trans_lt_gt_justification = 移行性
axiom_updownsimpl_diagnostic = ハイとローの簡素化
axiom_updownsimpl_justification = ハイとローの簡素化によって、
axiom_varchange_diagnostic = 変更変数
axiom_varchange_justification = 書き換えることにより、 {0}で{1}
basic_A = A
basic_BeMarried = 結婚します
basic_BeMarried_neg = 結婚していません
basic_BeScottish = スコットランドであります
basic_BeScottish_neg = スコットランドされるべきではありません
basic_BlackHat = ブラック
basic_ExprGT = {0} > {1}
basic_ExprGTEQ = {0} ≥ {1}
basic_ExprLT = {0} < {1}
basic_ExprLTEQ = {0} ≤ {1}
basic_FBij = {4}全単射であります
basic_FComp = {6} ∘ {7}
basic_FFInj = {1}上単射である[0 ... {0} ]
basic_FFMono = {1} 、厳密に増加している[... 0 {0} ]
basic_FInj = {4}単射であります
basic_FInj_neg = {4}単射ではありません
basic_FInvolution = {3} involutiveです
basic_FSurj = {4}上にあります
basic_FSurj_neg = {4}上ではありません
basic_False = 矛盾
basic_False_sci = 偽
basic_FindX = xの値を検索します。
basic_FindY = yの値を検索します。
basic_GoOutSundays = 日曜日にアウト
basic_GoOutSundays_neg = ない日曜日のアウト
basic_GoToMatch = 明日の試合に行きます
basic_GoToMatch_neg = 明日の試合に行っていません
basic_GoToTraining = 今日の訓練に行きます
basic_GoToTraining_neg = 今日の訓練に行っていません
basic_O1FInj = {4}単射であります
basic_O1FInj_neg = {4}単射ではありません
basic_O1FSurj = {4}上にあります
basic_O1FSurj_neg = {4}上ではありません
basic_OldYoungUtterance = 最も古いもので、最年少は何ですか？
basic_Oldest = {0}最古の子であります
basic_Oldest_neg = {0}最古の子ではありません
basic_PropDependentN = n個に応じた提案
basic_RAntiSym = {2}反対称であります
basic_RComp = {6} {7}
basic_REquiv = {2}同値関係であります
basic_RFun = {4}機能であります
basic_RIRRefl = {2}非反射であります
basic_RInj = {4}単射であります
basic_RInv = {4} ⁻¹
basic_RRefl = {2}反射的です
basic_RSurj = {4}上にあります
basic_RSym = {2}対称であります
basic_RTot = {4}の合計であります
basic_RTotLeft = {4}の合計左側です
basic_RTrans = {2}推移であります
basic_ScottishUtterance = スコットランドのクラブ。
basic_Set = 一緒に
basic_ToBeHuman = 人間
basic_ToBeHuman_neg = 全く人間ません
basic_ToBeMortal = 致命的なこと
basic_ToBeMortal_neg = 致命的なことはありません
basic_ToBeSocrate = ソクラテスこと
basic_ToBeSocrate_neg = ソクラテスではありません
basic_WearAKilt = キルトを着用
basic_WearAKilt_neg = キルトを着用しません
basic_WearRedSocks = 赤い靴下を履きます
basic_WearRedSocks_neg = 赤い靴下を着用しません
basic_WhiteHat = ホワイト
basic_Youngest = {0}の末っ子であります
basic_Youngest_neg = {0}最年少の子ではありません
basic_addition = 追加することによって、 {0}
basic_and = と
basic_and_sci = ∧
basic_app_fun_exset = {2} {3} ）
basic_app_prop = {1} {2} ）
basic_app_prop2 = {1} {2} {3} ）
basic_app_prop2_sci = {1} {2} {3} ）
basic_app_prop_sci = {1} {2} ）
basic_app_rel = {1} {0} {2}
basic_app_rel_sci = {1} {0} {2}
basic_are_collinear = {0}同一直線上にあります
basic_are_collinear_neg = {0}同一直線上にありません
basic_are_parallel = {0}と{1}平行であり、
basic_are_parallel_neg = {0}と{1}平行ではありません
basic_arith_elim = 定義結果aritmétiqueによって
basic_case = もし{0} {1}
basic_demonstrate_lim = それが証明{0}制限することを認めている{1}
basic_determine = 決定{0}
basic_determine_lim = 値の上限を決定する{0}
basic_determine_reason = 次の理由を決定する{0}
basic_determine_value = 値を決定する{0}
basic_development = 開発によって
basic_division = 除算を通じて{0}
basic_division_and_multiplication = 除算と乗算することにより{0}
basic_elim_is_solution_equiv = 定義により
basic_elim_limit_expr_b = 左または右の限界を定義すること
basic_elim_rewrite_equiv = 書き換えることにより、
basic_eq_symmetry_equiv = 平等の関係の対称性によって、
basic_equation = 式{1}
basic_equation_systeq = 連立方程式{1}
basic_equiv = {0} {数学：⇔} {1}
basic_equiv1 = {0} {数学：⇔} {1}
basic_equiv1_sci = {0} {数学：⇔} {1}
basic_equiv_sci = {0} {数学：⇔} {1}
basic_expansion = 開発によって
basic_expansion_of_power = 定義電源によって
basic_expr_is_defined_on = {1}に設定されている{2}
basic_expr_is_defined_on_neg = {0}に定義されていません{1}
basic_factorization = 因数分解
basic_findLimitExpr = 限界値を決定する{1}ように{2}
basic_find_asymptot = {}の漸近挙動見つける{2}の{3}
basic_find_expr = {}の値を見つける{0} {} justTagsを
basic_find_limit = {}の限界を見つける{2}の{3} {} justTagsを
basic_find_limit_type = {}の振る舞いを見つける{4}無限大に
basic_find_series_type = {}次のタイプを見つける{0}
basic_floor_id = 耳鼻咽喉科
basic_fun_has_finite_limit = {4}収束であります
basic_fun_has_lower_bound = {4}以下に制限されます
basic_fun_has_upper_bound = {4}増加します
basic_fun_is_bounded = {4}囲まれています
basic_fun_is_constant = {4}定数であります
basic_fun_is_decreasing = {4}減少しています
basic_fun_is_decreasing_neg = {4}減少していません
basic_fun_is_defined_on = {4}に設定されている{5}
basic_fun_is_gt_zero = {4}正です
basic_fun_is_increasing = {4}増加しています
basic_fun_is_increasing_neg = {4}に成長されていません
basic_fun_is_lt_zero = {4}負であります
basic_gen_app_rel = {5} {4} {6}
basic_gen_app_rel_sci = {5} {4} {6}
basic_geoconstr = 建設により{0}
basic_id = {0}
basic_imply = 暗示
basic_imply_sci = {数学：⇒}
basic_ind_basic_evar_0 = 初期ランク
basic_is_a_neighborhood = {1}の近傍である{2}
basic_is_add_increasing = さらには、関係のために成長している' {0} '
basic_is_aware = {0}ことを知っている{1}
basic_is_aware_neg = {0}ことを知りません{1}
basic_is_bad = {0}悪いです
basic_is_big_enough = {0}素晴らしいです
basic_is_crossed = 四角形{0}交差します
basic_is_crossed_neg = 四角形{0}交差していません
basic_is_defined_on = {0}に設定されている{1}
basic_is_definition_set = {0}の定義の集合は{1}
basic_is_element = {1} {数学：ε} {2}
basic_is_element_dom = {0} {数学：ε} {1}
basic_is_element_neg = {1}の要素ではない{2}
basic_is_element_sci = {1} {数学：ε} {2}
basic_is_element_sci_neg = {1} {数学：∉} {2}
basic_is_even = {0}偶数であります
basic_is_good = {0}に純粋です
basic_is_in_neighbourhood_of = {0}の近傍である{1}
basic_is_integer = {0}整数です。
basic_is_lci = {0}上の二項演算がある{1}
basic_is_lci_neg = {0}でバイナリ操作ではありません{1}
basic_is_middle_segment = {0}中間セグメントである{1}
basic_is_middle_segment_neg = {0}セグメントの真ん中ではありません{1}
basic_is_monotonic_on = {1}に減少している{2}
basic_is_multiple_of = {0}で割り切れる{1}
basic_is_multiple_of_neg = {0}で割り切れない{1}
basic_is_odd = {0}奇数であります
basic_is_parallelogram = {0}平行四辺形であります
basic_is_parallelogram_neg = {0}平行四辺形ではありません
basic_is_partition = {1}のパーティションである{0}
basic_is_polynom = {1}多項式であります
basic_is_projected_on = {0}の正射影である{1}の{2}
basic_is_reflexive = 関係' {0} '反射的です
basic_is_restriction = {5}の制限である{6}に{2}
basic_is_solution = {0}解の集合は{1}
basic_is_solution_neg = {0}の解決策ではありません{1}
basic_is_symmetric = {0}の逆数である{2}に対して{1}
basic_is_transitive = 関係' {0} '推移があります
basic_isolate = 隔離{0}
basic_knows_hatcolor = {0}彼の帽子の色を知っています
basic_knows_hatcolor_neg = {0}彼の帽子の色を知りません
basic_le = ≤
basic_lor_elim = 十分な仮説
basic_multiplication_and_division = 乗算や除算することにより{0}
basic_nats = {0}と{1}
basic_neighborset = {1}
basic_not = しません
basic_not_sci = ¬
basic_oldyoung = 若い、古いです
basic_or = または
basic_or_sci = ∨
basic_pis_element = {2} {数学：ε} {3}
basic_pis_element_neg = {2}の要素ではありません{3}
basic_pis_element_sci = {2} {数学：ε} {3}
basic_pis_element_sci_neg = {2} {数学：∉} {3}
basic_proddecompr = 分解による
basic_proddownshift = インデックスのシフトによって、
basic_pset3 = {0} {1}と{2}
basic_rel_is_defined_on = {0}に設定されている{1}
basic_rel_is_defined_on_neg = {0}に定義されていません{1}
basic_rel_le = ≤
basic_resolve = 解決{0}
basic_rewrite_in = {1}に書き換えられる{2}で{0}
basic_ror_elim = 十分な仮説
basic_say = {0}と述べ{1}
basic_set_lt = {0} ⊂ {1}
basic_set_lteq = {1} ⊆ {2}
basic_shas_finite_limit = {0}収束です
basic_shas_limit = {0}制限することを認めている{1}
basic_shas_limit_neg = {0}制限することを認めていません{1}
basic_sigmadecompr = シグマの分解による
basic_sigmadownshift = インデックスをシフトすることにより、
basic_sis_arith = {2}算術であります
basic_sis_arith_neg = {2}算術ではありません
basic_sis_arith_reason = {2}のためのものであり、算術{3}
basic_sis_arith_reason_neg = {2}算術ではありませんので、 {3}
basic_sis_caracterized = 次の{0}には、幾何学的または算術のですか？
basic_sis_element = {0} {数学：ε} {1}
basic_sis_element_neg = {0} {数学：∉} {1}
basic_sis_element_sci = {0} {数学：ε} {1}
basic_sis_element_sci_neg = {0} {数学：∉} {1}
basic_sis_geo = {2}の幾何学的です
basic_sis_geo_neg = {2}の幾何学的ではありません
basic_sis_geo_reason = {2}の幾何学的な理由である{3}
basic_sis_geo_reason_neg = {2}の幾何学的な理由ではありません{3}
basic_subtraction = 減算により{0}
basic_subtraction_and_addition = 減算との添加による{0}
basic_triv_div_lr = 二つの部材の分割による{0}
basic_true_at_rank = {0}ランクに忠実である{1}
basic_true_at_rank_neg = {0}ランクに偽である{1}
basic_true_at_rank_sci = {0} {1} ）
basic_true_at_rank_sci_neg = ¬ {0} {1} ）
basic_uprod = {0} X {1}
basic_wears_hat = {0}の帽子を身に着けている{1}
basic_wears_hat_neg = {0}帽子を着用していない{1}
help_part_content = コンテンツ
help_part_paper = デジタルコピー
help_section_browsing = ナビゲーション
help_section_commutativity = 交換性
help_section_evar = 未知の原因
help_section_exercises = ドリル
help_section_proof = デモ
help_section_selection = 選択
help_section_trophy = メダイヨン
help_section_unification = 単一化
key_Product = 製品
key_access_content = コンテンツ
key_access_date = 有効期限
key_access_role = 役割
key_access_role_ref = 指示対象
key_access_role_user = 学生
key_account = 私のアカウント
key_add = 加えます
key_add_exercise_message = 今年の文を書きます...
key_add_exercise_title = 追加の運動をリクエスト
key_and = と
key_apply = 適用します
key_ask_hint_button = ディスプレイ
key_assume = 仮定する
key_back_connection_panel = ログイン画面に戻るには、
key_browsing_train = ドリル
key_by = よる{0}
key_cancel = キャンセル
key_catchme = これをキャッチ
key_change_password = パスワードの変更
key_chapters = チャプター
key_character_not_available = 使用できない文字
key_check_box = チェックボックスをオンに
key_check_cgu = TOS
key_check_text_cgu = 受け入れます
key_class = クラス
key_class_default_message = あなたはどのクラスに属していません。
key_click_here = こちらをクリック
key_clickme = ここをクリックしてください
key_clickme_fix = 正しいと入力するにはこちらをクリック
key_clickme_valid = 適用します
key_commuteme = 以下の値を超えて取得します。
key_conclusion = 結論
key_confirm_delete_tab_message = スコープを削除しますか？
key_confirm_delete_tab_message_yes = はい
key_confirm_password = パスワードの確認
key_confirm_quit_exercise = 現在の年破棄しますか？
key_congrats = ブラボー、運動が示されています！
key_connection = ログイン
key_construct = ビルド
key_context = コンテキスト
key_create_account = アカウントを作成します
key_create_account_connect = ユーザー登録/ログイン
key_credits = チップ
key_credits_content_message = アプリケーションから直接コンテンツを購入します。
key_credits_content_title = コンテンツ
key_credits_pack_message = トークンを使用すると、アプリケーション内のコンテンツのロックを解除します。
key_credits_pack_pack1_title = 発見
key_credits_pack_pack2_title = トレーニング
key_credits_pack_pack3_title = 究極
key_credits_pack_title = クレジット
key_deduce = 差し引きます
key_deduce_in = で差し引きます
key_deduce_of = から控除
key_deduce_scope = この範囲内で控除
key_delete = 削除します
key_delete_account = アカウントの削除
key_delete_account_message = 電子メールはアカウントを削除するために送られました
key_delete_message = 任意の文字で「削除」を下のボックスに、タイプのアカウントを削除し、[OK]をクリックします。
key_delete_word = DELETE
key_deleted_account = アカウント{0}削除されました。すぐにお会いしましょう​​！
key_demonstrate = ショー
key_description_back = <DIV>ルールを呼び出すことによって提案を正当化するには、< -   -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}！>：< -  {タイプ= \"axiom_api\"入力= \"{axiomId}\"}！ - > </ div>の
key_description_backsel = <DIV>ルールを呼び出すことによって提案を正当化するには、< -   -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}！>：< -  {タイプ= \"axiom_api\"入力= \"{axiomId}\"}！ - > </ div>の
key_description_delete = <DIV>の提案を削除する<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - > </ div>の
key_description_deleteby = <DIV>提案の正当性を削除する<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - > </ div>の
key_description_for = <DIV>より小さい<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >による<！ -  {タイプ= \"axiom_api\"入力= \"{axiomId}\"}  - > </ DIV>
key_description_forsel = <DIV>より小さい<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >による<！ -  {タイプ= \"axiom_api\"入力= \"{axiomId}\"}  - > </ DIV>
key_description_inst = 値を入力します。<！ -  {タイプ= \"exprを\"入力= \"{actTypArg2}\"}  - >で<！ -  {タイプ= \"paper_evar\"入力= \"{actTypArg}\"}  - > </ div>の
key_description_section = 提案の範囲を開き、<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >
key_description_success = <DIV>ブラボー、運動が終わった。</ div>
key_description_unif = <！ -  {タイプ=「タグ」入力= \"{actTypArg}\"}  - >提案を統一し、<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >
key_diagnostic_no_diag = この章のエントリはまだ利用できません。
key_disconnect = ログアウト
key_draggable_title = オペランドを移動します
key_dragme = ここにドラッグします
key_email = 電子メール
key_email_not_authorized = 不正な電子メール
key_email_not_found = メールが見つかりません
key_email_not_valid = 無効なEメール
key_email_not_verif = メール未監査
key_email_unknown = 不明なメール
key_email_used = メール使用
key_email_valid = 有効なメール
key_empty_field = ブランク
key_empty_suggest = このアクションのために利用できませエントリはありません
key_error_paper_subtitle = 見つかりません
key_error_paper_title = この論文を取得することはできません
key_exercise = エクササイズ
key_exercises = ドリル
key_fill_evar = の値
key_find = 決定します
key_firstname = ファーストネーム
key_focus_text = コンテキスト
key_follow_us = 時事性
key_forbid_mobile = アプリケーションは、モバイルでは使用できません
key_forgot_password = パスワードを忘れましたか？
key_geo_figure = 幾何学的図形
key_get_credits = リロードチップ
key_goal = ターゲット
key_got_it = 指摘しました。
key_graph = グラフ
key_group_popup_button = 加えます
key_group_popup_input_default = アクセスコード
key_group_popup_title = アクセスコードを入力してください
key_help = 助けます
key_help_tooltip_chapter_icon_all = 円形パネル「ユニバーサル」
key_help_tooltip_chapter_icon_diag = 円形パネル「エクスプレス」
key_help_tooltip_chapter_icon_tuto = 円形パネル「チュートリアル」
key_help_tooltip_chapter_icon_unavoidable = 円形パネル」必要があります」
key_help_tooltip_clearall = オールクリア
key_help_tooltip_deduce = 診断控除
key_help_tooltip_exercise_icon_diag = 円形パネルを提供する「エクスプレス」
key_help_tooltip_exercise_icon_difficulty_easy = 簡単に
key_help_tooltip_exercise_icon_difficulty_hard = 難しいです
key_help_tooltip_exercise_icon_difficulty_medium = 手段
key_help_tooltip_exercise_icon_hint = 表示
key_help_tooltip_exercise_icon_unavoidable = 行使しなければなりません
key_help_tooltip_hint = 表示
key_help_tooltip_justify = 診断正当化
key_help_tooltip_lock_access_no = アクセスできません
key_help_tooltip_lock_access_without_deadline = アクセス可能な
key_help_tooltip_print = 印刷
key_help_tooltip_redo = リメイク
key_help_tooltip_section = スコープを作成します
key_help_tooltip_undo = キャンセル
key_help_tooltip_unify = 統一
key_hint_message = 解像度の表示を表示するには、以下のボタンをクリックしてください
key_hintpopup_action = アクション
key_hintpopup_actions = ストック
key_hintpopup_description = 説明
key_hintpopup_preview = 調査
key_hintpopup_tab_desc = 説明
key_hintpopup_tab_hint = 表示
key_home_credits_text = チップの数
key_home_dashboard_badges = メダイヨン
key_home_dashboard_exercises = 解決演習
key_home_profile_text = ようこそ、{firstnameの}
key_ice = 内部エラーが発生しました。アプリケーションを再起動するありがとうございます。
key_id_connection = ログイン
key_if = もし
key_img_text_1 = 更新
key_img_text_2 = 私のプロフィール写真
key_inputme = 次の値を完了します。
key_justify = 正当化します
key_justify_of = 論理的根拠
key_language = 言語
key_lastname = 名前
key_legend = 伝説：
key_levels = レベル
key_loading_message = 読み込み中、しばらくお待ちください...
key_local_theorem = 地元の定理
key_login_with = で接続します。
key_main_scope = 主なスパン
key_membership_alreadyadd = すでに追加
key_membership_error = エラー
key_membership_notfound = 未知のコード
key_membership_overused = クォータに達しました
key_modify = 変更
key_nats = {0}と{1}
key_need_help = 助けが必要ですか？
key_new_exercise = 新しい年
key_next = 以下の
key_no_email_message = あなたのメールアドレスは、他の方法で再接続をお願いし、接続モードには表示されません。
key_not_yet_register = あなたが登録されていない場合は、
key_ok = OK
key_or = または
key_password = パスワード
key_password_confirmed = パスワードの確認
key_password_current = 現在のパスワード
key_password_incorrect = パスワードが正しくありません。
key_password_new = 新しいパスワード
key_password_not_confirmed = 未確認パスワード
key_password_too_short = 短すぎるパスワード（6文字以上）
key_password_valid = 有効なパスワード
key_password_with_digit = パスワードには、少なくとも1つの数字を含んでいなければなりません
key_preview = 調査
key_profile_informations = プロフィール情報
key_proof_of = デモ
key_propdeftag_def = 定義
key_propdeftag_prop = 提案
key_prove_text = デモ
key_prove_text_close = デモンストレーション...
key_prove_text_open = デモ：
key_register = 登録
key_registration = 登録
key_reinit = リセット
key_reinit_password = パスワードをリセットするためにあなたのメールアドレスを入力してください
key_reinit_password_message = 電子メールは、パスワードをリセットするために送信されました
key_report_input_default = 助けを求めるか、問題を報告
key_report_label = 私達にメッセージを送ります
key_report_label_email = あなたのメールアドレス：
key_report_message_sent = メッセージが送信されました！
key_report_modify_message = 投稿の編集
key_report_next = 以下の
key_report_placeholder_email = メール
key_report_recontact = 私たちは、ご連絡させていただきます。
key_report_send = 送信
key_require_message = この章にアクセスするには、以下のメダイヨン「チュートリアル」の章を取得します：
key_require_message_exercise = この演習にアクセスするには、以下のメダイヨン「チュートリアル」の章を取得します：
key_require_message_part = チャプターにアクセスするには、以下のメダイヨン「チュートリアル」の章を取得します：
key_required = 前提条件：
key_save = レコード
key_scroll_down = スクロールダウンします
key_scroll_up = スクロールアップします
key_segments = セグメント
key_selectme = 上記の式を選択
key_send = 送信
key_social_login = <divクラス= \" {0} \"> <aのtarget=\"_blank\" href=\"http://fr.wikipedia.org/wiki/Social_login\" class=\" {1} \">ソーシャルログインする</a>ですアカウントとログインを作成する最も簡単で安全な方法。何もあなたに公開されません \"壁\"。 </ divの>の<divクラス= \" {2} \">ボタンをクリックすると、あなたが私たちの<a target=\"_blank\"のhref=\"に同意{3} \"class=\" {4} \">条件「</a>には<a target=\"_blank\"のhref=\"と私たちの{5} \"class=\" {6} \"> </a>のプライバシーポリシー。</ div>の
key_sorry_whitelist = アプリケーションはまだ利用できません。 contact@edukera.com：登録したい場合は、に電子メールを送信するためにありがとうございました
key_start = スタート
key_status_report = 問題を報告します
key_step_choice_axiom = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >で<スパンクラス= \"ヒントテキスト\"> <！ -  {タイプ= \"label_toolbox\"入力= \" TPartId {} \"}  - > </ span>の<！ -  {タイプ=\" toolbox_button \"入力=\" {TPartId} \"}  - >アクセスボタンを使用して章<！ -  {タイプ=\" label_toolbox「入力= \"{TChapterId}\"}  - > <！ -  {タイプ= \"toolbox_button\"入力= \"{TChapterId}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ DIV>
key_step_choice_axiom_in_diag = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >公理を選択し、<！ -  {タイプ= \"diag_axiom\"入力= \"{axiomId}\"}  - >でセクション<！ -  {タイプ= \"diag_axiom_part\"入力= \"{TSectionId}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_choice_question_tab = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >を選択し、印刷、<中！ -  {タイプ= \"question_tab\"入力= \"{} tabQuestionValue」 }  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_choice_tab_index_in_diag = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - > <！ -  {タイプ= \"diag_tab\"入力= \"{actIdx}\"}  - >をクリックします。 <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_click_apply = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - > <！ -  {タイプ= \"button_applyを\"}  - >をクリックし、プレビューウィンドウ。 <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_click_deduce = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >をクリックします<！ -  {タイプ= \"button_deduce\"}  - > <の！ -  {タイプ= \"propdeftag 「入力= \"{STATEMENTID}\"}  - > <！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >診断ウィンドウを表示します。 <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_click_justify = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >をクリックします<！ -  {タイプ= \"button_justify\"}  - >提案<！ -  {タイプ= 「タグ」入力= \"{STATEMENTID}\"}  - >診断ウィンドウを表示します。 <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_delete = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - > <！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >提案を削除<！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_deleteby = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >提案の正当性を削除します。<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_drag = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >公理をスライドさせます。<！ -  {タイプ= \"toolbox_item\"読み取り専用= \"true\"を入力= ​​\"{} axiomId」 }  - > <の！ -  {タイプ= \"label_toolbox\"クラス= \"ツールボックスセクションタイトル-コンテンツ「入力=\" {TSectionId} \"}  - >。 <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_drop = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >のリリース<！ -  {タイプ= \"propdeftag\"入力= \"{STATEMENTID}\"}  - > <！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_enter_expr_in_diag = <DIVクラスは= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >の値を入力します。<！ -  {タイプ= \"exprの\"文=入力= \"{} actArgItemSecondを\" {}はSTATEMENTID」 \"}  - > <仮想キーボード！ -  {タイプ=\" EVAR \"入力=\" {evarId} \"}  - > <！ -  {タイプ=\" hint_check \"}  - > </ div>の
key_step_inst = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >の値を入力します。<！ -  {タイプ= \"exprを\"入力= \"{actTypArg2}\"}  - >で< ！ -  {タイプ= \"paper_evar\"入力= \"{actTypArg}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_open_toolbox = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >ボタンを使用して、ツールボックスを開き、<！ -  {タイプ= \"toolbox_header_button\"}  - > < ！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_section = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - > <！ -  {タイプ= \"button_sectionを\"}  - >をクリックします提案の<！ -  {タイプ= 「タグ」入力= \"{STATEMENTID}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_selection = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >提案で選択し、<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - >この用語は、以下の青くハイライト：！！<！ -  {タイプ= =ステートメントを \"小道具\"入力 \"{}はSTATEMENTID\" = \"{selectionProp}\"}  - > <BR>の<div> < -  {タイプ= \"hint_check\"}  - > </ div>の</ DIV>
key_step_unification = <DIVクラス= \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >をクリックします<！ -  {タイプ= \"button_unify\"入力= \"{actTypArg}\"}  - >提案に<！ -  {タイプ=「タグ」入力= \"{STATEMENTID}\"}  - > <！ -  {タイプ= \"hint_check\"}  - > </ div>の
key_step_unify_in_diag = <DIV CLASS = \"項目命令\"> <！ -  {タイプ= \"hint_itemize\"}  - >をクリックします<！ -  {タイプ=入力を \"button_unify\" = \"{actUnifItem}\"}  - > <！ -  -  {タイプ= \"hint_check\"}  - > </ div>の
key_sub_subscription_sentence = 登録していただきありがとうございます、確認メールが送信されます。
key_success_trophy_message = おめでとう、あなただけの円形パネルtrophyId {}、{章} chapterIdを取得します
key_success_trophy_title = 円形パネル} {trophyId
key_task_justify_label = それは正当化するために残っています
key_then = その後
key_toolbox_error_message = この公理は、この提案に適用することができます。
key_tooltip_axiom_close = 式を隠します
key_tooltip_axiom_open = 式を表示
key_tooltip_context_close = コンテキストを表示
key_tooltip_context_open = コンテキストを隠します
key_tooltip_section_close = 非表示セクション
key_tooltip_section_open = 表示部
key_trophy_diagnostic = 診断
key_trophy_exercises = エクササイズ
key_trophy_tutorial = チュートリアル
key_trophy_unavoidable = 避けられません
key_tutorial = チュートリアル
key_uid = ログイン
key_unlock = ブロックを解除
key_update_browser = 現在、ブラウザのブラウザ{} {バージョン} CURRENT_VERSIONを使用しています。このバージョンは、edukeraアプリケーションと互換性がありません。ブラウザを更新または変更をお願い致します。
key_usage = 使用
key_utterance = 言明
key_validate = 検証
key_with = ととも​​に
key_without_hint = この演習では、解像度表示サービスを提供していません。
key_yes = はい
pager_account = 私のアカウント
pager_adabusrdum = 不合理
pager_algebra = 代数
pager_algebra_structures = 代数的構造
pager_algebra_structures_01 = 
pager_analysis = 解析
pager_analysis_induction = 再発
pager_analysis_limits = 制限
pager_analysis_series = スイート
pager_analysis_series_05 = 
pager_badges = メダイヨン
pager_classical = 従来型の
pager_comb = 連立方程式
pager_commutativity = 交換性
pager_credits = クレジット
pager_dashboard = 続きます
pager_demo_bernoulli_1 = ベルヌーイの不等式1
pager_demo_bernoulli_2 = ベルヌーイの不等式2
pager_demo_medium_ex_02 = 可分性
pager_demo_seg = 代数
pager_demo_tuto_app = アプリケーション
pager_demo_tuto_comb = 組み合わせ
pager_demo_tuto_first = 左右に操作
pager_demo_tuto_fun = 定義
pager_demo_tuto_neq = 不平等
pager_demo_tuto_rel = 移行性
pager_demo_tuto_serie = 限界の1 / n
pager_demo_tuto_sigma = 最初のn個の整数の和
pager_demorgan = モーガン
pager_easy = 簡単に
pager_enigma = エニグマ
pager_eq_seg = 平等
pager_eqothers = 混合物
pager_existence = 存在
pager_expansion = 分配性
pager_finj = 圧入性
pager_funpigeon = 鳩の巣原理
pager_funsurj = surjectivity
pager_good_bad = 真実と嘘
pager_hard = 難しいです
pager_ind_bernouilli = 不平等
pager_ind_divis = 可分性
pager_ind_sum = 和の計算
pager_ineq_ex_15 = オペレーション
pager_ineq_ex_20 = 組み合わせ
pager_ineq_ex_22 = 骨組み
pager_ineq_ex_24 = アプリケーション
pager_ineq_ex_25 = 関係
pager_ineq_seg = 不平等
pager_ineq_system = 不等式のシステム
pager_ineqs = 不平等
pager_limits_finite = 有限の点で機能の制限
pager_limits_inf = 制限機能の無限大
pager_limits_prop = 定義によってプロパティ
pager_limits_series = 制限スイート
pager_logic = ロジック
pager_logic_connector = コネクタ
pager_logic_connector_abs_peirce = 矛盾によってパースの法則
pager_logic_connector_associativity = 結合性
pager_logic_connector_classical = 古典論理
pager_logic_connector_constructivism = 構成主義の論理
pager_logic_connector_deMorgan_laws = ド・モルガンの法則
pager_logic_connector_distributivity = Distributivités
pager_logic_connector_ex_easy_01 = 和の分配性
pager_logic_connector_ex_easy_02 = 併せて分配性
pager_logic_connector_ex_easy_06 = 整数の存在
pager_logic_connector_ex_easy_08 = 三段論法
pager_logic_connector_ex_easy_12 = ロイス・デ・モーガン3/3
pager_logic_connector_ex_easy_13 = ロイス・デ・モーガン1/3
pager_logic_connector_ex_easy_14 = 接続詞の連想
pager_logic_connector_ex_easy_16 = 対置の1/2
pager_logic_connector_ex_easy_17 = 対置の2/2
pager_logic_connector_ex_easy_27 = 和の連想
pager_logic_connector_ex_easy_31 = 矛盾によって推論
pager_logic_connector_ex_easy_32 = ロイス・デ・モーガン2/3
pager_logic_connector_ex_easy_33 = 和の分配性
pager_logic_connector_ex_easy_34 = 併せて分配性
pager_logic_connector_negation = 否定
pager_logic_connector_peirce_abs_te = 法律パースによって不条理
pager_logic_connector_peirce_law = パースの法則
pager_logic_connector_reasoning = 推論
pager_logic_connector_training = 基本
pager_logic_connector_tuto_01 = 接続詞を証明
pager_logic_connector_tuto_02 = 接続詞を差し引きます
pager_logic_connector_tuto_03 = 論理和を証明
pager_logic_connector_tuto_04 = 選言ケース
pager_logic_connector_tuto_06 = 関与を証明します
pager_logic_connector_tuto_07 = 関与を差し引きます
pager_logic_connector_tuto_08 = 負を証明
pager_logic_connector_tuto_085 = 否定を差し引きます
pager_logic_connector_tuto_09 = 例Falsoクオドリベット
pager_logic_connector_tuto_10 = 除外
pager_logic_function = 機能
pager_logic_quantifer_tuto_2 = 宇宙全体
pager_logic_quantifier = 数量詞
pager_logic_quantifier_21 = スコットランドのクラブ
pager_logic_quantifier_ex_01 = 分配性組合
pager_logic_quantifier_ex_02 = 交差点の分配性
pager_logic_quantifier_ex_03 = モーガン1/2の行為
pager_logic_quantifier_ex_04 = モーガン2/2の行為
pager_logic_quantifier_ex_05 = セット部品
pager_logic_quantifier_ex_06 = デカルト積の分配性
pager_logic_quantifier_ex_07 = 実存分配性
pager_logic_quantifier_ex_easy_08 = ロイス・デ・モーガン2/2
pager_logic_quantifier_ex_easy_09 = ロイス・デ・モーガン1/2
pager_logic_quantifier_ex_le_01 = より小さいこと
pager_logic_quantifier_ex_le_02 = （2）よりも小さいです
pager_logic_quantifier_ex_le_03 = （3）よりも小さいです
pager_logic_quantifier_ex_le_04 = 真実と嘘1/4
pager_logic_quantifier_ex_le_05 = 真実と嘘2/4
pager_logic_quantifier_ex_le_06 = 真実と嘘3/4
pager_logic_quantifier_ex_le_07 = 真実と嘘4/4
pager_logic_quantifier_ex_le_08 = 逆に、インジェクション
pager_logic_quantifier_ex_le_10 = 総リレーションズ
pager_logic_quantifier_ex_le_13 = 原則1/2引き出し
pager_logic_quantifier_ex_le_14 = 鳩の巣原理2/2
pager_logic_quantifier_ex_le_15 = 二項関係
pager_logic_quantifier_ex_le_37 = デカルト積の分配性
pager_logic_quantifier_ex_le_40 = 機能、注射
pager_logic_quantifier_ex_le_41 = 全射
pager_logic_quantifier_ex_le_42 = 退縮、全単射
pager_logic_quantifier_ex_le_43 = 構図
pager_logic_quantifier_ex_le_48 = 矛盾によって除外
pager_logic_quantifier_ex_le_52 = 平等の対称性
pager_logic_quantifier_ex_le_53 = 推移平等
pager_logic_quantifier_ex_le_54 = 推移封入
pager_logic_quantifier_ex_le_67 = 等式の交点
pager_logic_quantifier_ex_le_68 = 等式の連合
pager_logic_quantifier_ex_le_69 = 介在物の交差点
pager_logic_quantifier_ex_le_70 = ユニオン介在物
pager_logic_quantifier_ex_le_71 = さん混乱させる
pager_logic_quantifier_ex_le_72 = 3帽子の謎
pager_logic_quantifier_tuto_01 = 証明有無
pager_logic_quantifier_tuto_02 = 存在を差し引きます
pager_logic_quantifier_tuto_03 = 定理を証明します
pager_logic_quantifier_tuto_04 = 定理を推論
pager_logic_relation = 関係
pager_logic_relation_tuto_01 = 関係のグラフ
pager_logic_relation_tuto_04 = 同等の
pager_logic_relation_tuto_05 = 構図
pager_logic_set_rewrite_01 = 書き換え
pager_logic_set_rewrite_03 = 結合性
pager_logic_set_rewrite_04 = 交換性
pager_logic_set_rewrite_05 = 簡素化
pager_logic_set_rewrite_06 = 開発/ファクタリング
pager_logic_set_rewrite_08 = 平等の対称性
pager_logic_set_rewrite_09 = 推移平等
pager_logic_set_rewrite_10 = 推移封入
pager_logic_set_rewrite_11 = 組み合わせ
pager_logic_settheory_tuto_01 = 交差点
pager_logic_settheory_tuto_02 = 組合
pager_logic_settheory_tuto_03 = 違い
pager_logic_settheory_tuto_04 = 補数
pager_logic_settheory_tuto_05 = インクルージョン
pager_logic_settheory_tuto_06 = 平等
pager_logic_settheory_tuto_07 = 空集合
pager_logic_settheory_tuto_08 = パーツ
pager_logic_settheory_tuto_09 = デカルト積
pager_lrops = 左右に操作
pager_medium = 手段
pager_relcar = Caratérisationensemblist
pager_relcomp = 構図
pager_relequiv = 等価
pager_relinv = リバース
pager_relle = 関係 \"≤\"
pager_reltrans = 移行性
pager_rew_almostsquare = ほぼ完璧な正方形
pager_rew_conjugate = 共役値
pager_rew_equation = 方程式
pager_rew_factorize = factorisations
pager_rew_gold = ゴールデン
pager_rew_system = 連立方程式
pager_rew_tuto_develop = 開発
pager_rew_tuto_fact1 = ファクタリング
pager_rew_tuto_fact2 = 顕著因数分解
pager_rew_tuto_group = グループ
pager_rew_tuto_idrem1 = 完全平方
pager_rew_tuto_idrem2 = 正方形の違い
pager_rew_tuto_misc1 = 交換性
pager_rew_tuto_misc2 = 書き換え
pager_rew_tuto_op = オペレーション
pager_rew_tuto_simpl = 単純化
pager_rew_tuto_simpl2 = 共通点
pager_rew_tuto_varchange = 変更変数
pager_rewrite_seg = 書き換え
pager_root = 歓迎
pager_series_arith = 算術シーケンス
pager_series_arithgeo = 算術幾何シーケンス
pager_series_bounded = 配列結合
pager_series_ex_01 = 
pager_series_geo = 幾何学的なシーケンス
pager_series_variation = 変化方向
pager_set_operators = オペレーション
pager_set_rewoperators = 計算のensemblist
pager_setcomb = 組み合わせ
pager_setdemorgan = モーガン
pager_setdistrib = Distributivités
pager_setinclusion = 介在物
pager_setprop = プロパティ
pager_settheory = セット
pager_sigma_ex_15 = 最初の整数の和
pager_sigma_ex_16 = 最初の正方形の和
pager_sigma_ex_18 = 分解
pager_sigma_ex_19 = 協会
pager_sigma_ex_20 = インデックスオフセット
pager_sigma_ex_21 = 最初の電力の合計
pager_sigma_ex_22 = 直線性
pager_sigma_ex_23 = 顕著です
pager_sigma_ref = 参照されています
pager_sigma_seg = シグマ
pager_sigma_telescop = 伸縮について
pager_sigma_withref = 参照量を使用して
pager_syllogism = 三段論法
toolbox_analysis = 解析
toolbox_appdef = 関数定義
toolbox_arith_series = 等差数列
toolbox_binrel = 均質な関係
toolbox_calculus = 計算
toolbox_combinaison = 組み合わせ
toolbox_conjunction = 接続詞
toolbox_connector = コネクタ
toolbox_converge = コンバージェンス
toolbox_disjonction = 分離
toolbox_distrib = 分配性
toolbox_eq = 平等
toolbox_eqfun = 平等
toolbox_eqrel = 対等な関係
toolbox_eqset = 平等
toolbox_equiv = 等価
toolbox_exists = 存在記号
toolbox_fact = 階乗
toolbox_forall = 全称記号
toolbox_function = 関数
toolbox_funop = 機能演算子
toolbox_geo_series = 等比数列
toolbox_implication = 関与
toolbox_induction = どのような整数n、...
toolbox_ineq = 不平等
toolbox_ineqapp = アプリケーション
toolbox_ineqbound = 骨組み
toolbox_ineqcomb = 組み合わせ
toolbox_ineqconv = 変換
toolbox_ineqrel = 関係
toolbox_leftright = 左右に操作
toolbox_leftright_ineq = 左右に操作
toolbox_leftright_neq = 不平等
toolbox_limfinite = 点で限界
toolbox_limitinf = リミット無限大
toolbox_limitops = オペレーション
toolbox_limits = リミット
toolbox_logic = ロジック
toolbox_logicothers = 古典論理
toolbox_lrapply = アプリケーション
toolbox_multiple = 可分性
toolbox_negation = 否定
toolbox_oldest = 高齢者であること
toolbox_operation = 操作
toolbox_operation_rewrite = 書き換え
toolbox_prod = 
toolbox_prodidx = 
toolbox_prodrem = 
toolbox_quantifier = 数量詞
toolbox_quantifier_confuse = 夫人。混乱させる
toolbox_quantifier_truthlie = 真実と嘘
toolbox_relation = 関係
toolbox_relops = 関係演算子
toolbox_relothers = 驚くべき関係
toolbox_relprop = 関係
toolbox_relset = ensemblist関係
toolbox_remid = 顕著アイデンティティ
toolbox_rewops = オペレーション
toolbox_rewprops = 書き換え
toolbox_rewrite = 書き換え
toolbox_series = スイート
toolbox_series_limitation = 制限
toolbox_series_sign = 記号
toolbox_series_variation = 変更
toolbox_set = 一緒に
toolbox_set_comb = 組み合わせ
toolbox_set_rewriting = 書き換え
toolbox_setexpr = ensemblist特性評価
toolbox_setfun = 関数
toolbox_setgraph = グラフ
toolbox_setops = オペレーション
toolbox_sigma = シグマの書き換え
toolbox_sigmaidx = 屈折率変化
toolbox_sigmarem = 顕著です
toolbox_simpl = 単純化
toolbox_slteq = インクルージョン
toolbox_somesets = 注目すべきコレクション
toolbox_sophiehat = ソフィーの帽子
toolbox_sophiehattheory = 理論の帽子
toolbox_true_at_rank = ランクnに忠実
toolbox_truthlie = 真実と嘘
toolbox_youngest = 最年少ビーイング
type_BinRel_arg = 二項関係{1}
type_BinRel_dec = {ID}は二項関係である{1}
type_BinRel_dec_body = {ID}は二項関係である{1} {本体}で定義されました
type_BinRel_exists_several = そこ{ID}二項関係{1}このような
type_BinRel_exists_simple = {ID}は二項関係が存在する{1}となるよう、
type_BinRel_forall_several = どんな{ID}二項関係{1}
type_BinRel_forall_simple = どんな{ID}上の二項関係{1}
type_BinRel_letin_several = 
type_BinRel_letin_simple = 
type_BinRel_sci_arg = {1}のx {1} ）
type_BinRel_sci_dec = てみましょう{ID}⊆ {1}のx {1}
type_BinRel_sci_dec_body = {ID}は二項関係である{1} {本体}で定義されました
type_BinRel_sci_exists_several = ∃{cartesian_id}⊆{cartesian_type}、
type_BinRel_sci_exists_simple = ∃{ID}⊆ {1}のx {1} 、
type_BinRel_sci_forall_several = ∀{cartesian_id}⊆{cartesian_type}、
type_BinRel_sci_forall_simple = ∀{ID}⊆ {1}のx {1} 、
type_BinRel_sci_letin_several = 
type_BinRel_sci_letin_simple = 
type_Child_arg = 子供
type_Child_dec = 子{ID}をしてみましょう
type_Child_dec_body = 
type_Child_exists_several = このような{ID}のような子どもたちがあります
type_Child_exists_simple = {ID}は子として存在します
type_Child_forall_several = どんな子{ID}
type_Child_forall_simple = かかわらず、子供の{ID}
type_Child_letin_several = 
type_Child_letin_simple = 
type_Child_sci_arg = 子供
type_Child_sci_dec = 子{ID}をしてみましょう
type_Child_sci_dec_body = 
type_Child_sci_exists_several = このような{ID}のような子どもたちがあります
type_Child_sci_exists_simple = {ID}は子として存在します
type_Child_sci_forall_several = どんな子{ID}
type_Child_sci_forall_simple = かかわらず、子供の{ID}
type_Child_sci_letin_several = 
type_Child_sci_letin_simple = 
type_Domain_arg = インターバル
type_Domain_dec = 区間{ID}を考えてみましょう
type_Domain_dec_body = {本体}によって定義された間隔{ID}を考えてみましょう
type_Domain_exists_several = 以下のような存在{ID}間隔、
type_Domain_exists_simple = そこ{ID}、このような間隔、
type_Domain_forall_several = どんな{ID}間隔。
type_Domain_forall_simple = かかわらず、間隔の{ID}
type_Domain_letin_several = 
type_Domain_letin_simple = 
type_Domain_sci_arg = インターバル
type_Domain_sci_dec = 区間{ID}を考えてみましょう
type_Domain_sci_dec_body = てみましょう{ID} = {本体}
type_Domain_sci_exists_several = ∃{ID}
type_Domain_sci_exists_simple = ∃{ID}
type_Domain_sci_forall_several = ∀{ID}
type_Domain_sci_forall_simple = ∀{ID}
type_Domain_sci_letin_several = 
type_Domain_sci_letin_simple = 
type_ExSet_arg = {ID}
type_ExSet_dec = 集合{ID}ましょう
type_ExSet_dec_body = {本体}で定義された集合{ID}はしてみましょう
type_ExSet_exists_several = 例えば{ID}としてセットがあり、
type_ExSet_exists_simple = そのようなセット{ID}があり、
type_ExSet_forall_several = どんなセット{ID}
type_ExSet_forall_simple = かかわらず、集合{ID}の、
type_ExSet_letin_several = 
type_ExSet_letin_simple = 
type_ExSet_sci_arg = {ID}
type_ExSet_sci_dec = 集合{ID}ましょう
type_ExSet_sci_dec_body = {本体}で定義された集合{ID}はしてみましょう
type_ExSet_sci_exists_several = 例えば{ID}としてセットがあり、
type_ExSet_sci_exists_simple = そのようなセット{ID}があり、
type_ExSet_sci_forall_several = どんなセット{ID}
type_ExSet_sci_forall_simple = かかわらず、集合{ID}の、
type_ExSet_sci_letin_several = 
type_ExSet_sci_letin_simple = 
type_ExprFun_arg = ℝにℝを適用します
type_ExprFun_dec = {ID}はℝへℝの適用であります
type_ExprFun_dec_body = {ID}は{本体}で定義されたℝへℝの適用であります
type_ExprFun_exists_several = 
type_ExprFun_exists_simple = 
type_ExprFun_forall_several = {ID}アプリケーションがℝにℝ何でも、
type_ExprFun_forall_simple = どんな{ID}ℝにℝを適用し、
type_ExprFun_letin_several = 
type_ExprFun_letin_simple = 
type_ExprFun_sci_arg = 
type_ExprFun_sci_dec = Fをしてみましょう：ℝ→ℝ
type_ExprFun_sci_dec_body = ℝ→ℝ{本体}で定義されます。fましょう
type_ExprFun_sci_exists_several = 
type_ExprFun_sci_exists_simple = 
type_ExprFun_sci_forall_several = 
type_ExprFun_sci_forall_simple = 
type_ExprFun_sci_letin_several = 
type_ExprFun_sci_letin_simple = 
type_Expr_arg = リアル
type_Expr_dec = いずれかの本当の{ID}
type_Expr_dec_body = {本体}で定義されたいずれかの本当の{ID}
type_Expr_exists_several = このような{ID}のような本当があり、
type_Expr_exists_simple = そのような本当の{ID}があり、
type_Expr_forall_several = どのような本当の{ID}
type_Expr_forall_simple = どのような本当の{ID}
type_Expr_letin_several = 
type_Expr_letin_simple = {本体}で定義された{ID}実際{ID}
type_Expr_sci_arg = ℝ
type_Expr_sci_dec = てみましょう{ID} {数学：εℝ}
type_Expr_sci_dec_body = てみましょう{ID} = {本体}
type_Expr_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_Expr_sci_exists_simple = ∃{ID} {数学：ε}ℝ、
type_Expr_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_Expr_sci_forall_simple = ∀{ID} {数学：ε}ℝ、
type_Expr_sci_letin_several = 
type_Expr_sci_letin_simple = {ID} {数学：εℝ}、{ID} = {本体}
type_FRel_arg = 
type_FRel_dec = 
type_FRel_dec_body = 
type_FRel_exists_several = 
type_FRel_exists_simple = 
type_FRel_forall_several = 
type_FRel_forall_simple = 
type_FRel_letin_several = 
type_FRel_letin_simple = 
type_FRel_sci_arg = {2} X {3}
type_FRel_sci_dec = てみましょう{ID}⊆ {2} X {3}
type_FRel_sci_dec_body = 
type_FRel_sci_exists_several = 
type_FRel_sci_exists_simple = 
type_FRel_sci_forall_several = ∀{cartesian_id}⊆{cartesian_type}、
type_FRel_sci_forall_simple = ∀⊆{ID} {2} X {3} 、
type_FRel_sci_letin_several = 
type_FRel_sci_letin_simple = 
type_FunDef_arg = 上で定義された関数{2}
type_FunDef_dec = {ID}は上に定義された関数である{2}
type_FunDef_dec_body = {ID}は上に定義された関数である{2} {本体}へ
type_FunDef_exists_several = そこに上の関数の{ID} {2}となるよう、
type_FunDef_exists_simple = そこ{ID}で定義された関数{2}となるよう、
type_FunDef_forall_several = 上で定義されているものは何でも{ID}関数{2}
type_FunDef_forall_simple = 上で定義されているものは何でも{ID}関数{2}
type_FunDef_letin_several = 
type_FunDef_letin_simple = {idが}関数に設定されている{2}に{本体}
type_FunDef_sci_arg = {2} → {2}
type_FunDef_sci_dec = てみましょう{ID}： {2} → {2}
type_FunDef_sci_dec_body = てみましょう{idは}： {2} → {2} {本体}で定義されました
type_FunDef_sci_exists_several = ∃{pair_id}： {2} → {2} 、
type_FunDef_sci_exists_simple = ∃{ID}： {2} → {2} 、
type_FunDef_sci_forall_several = ∀{pair_id}： {2} → {2} 、
type_FunDef_sci_forall_simple = ∀{ID}： {2} → {2} 、
type_FunDef_sci_letin_several = 
type_FunDef_sci_letin_simple = {idが}関数に設定されている{2}に{本体}
type_FunUnknown_arg = 関数
type_FunUnknown_dec = てみましょう{ID}関数
type_FunUnknown_dec_body = {ID}は{本体}で定義された関数であります
type_FunUnknown_exists_several = そこのような、{ID}機能
type_FunUnknown_exists_simple = そこ{ID}関数など、その
type_FunUnknown_forall_several = どんな{ID}機能、
type_FunUnknown_forall_simple = どんな{ID}関数、
type_FunUnknown_letin_several = 
type_FunUnknown_letin_simple = {ID}は{本体}で定義された関数であります
type_FunUnknown_sci_arg = {0} → {1}
type_FunUnknown_sci_dec = てみましょう{ID}： {0} → {1}
type_FunUnknown_sci_dec_body = てみましょう{idは}： {0} → {1} {本体}で定義されました
type_FunUnknown_sci_exists_several = ∃{pair_id}： {0} → {1} 、
type_FunUnknown_sci_exists_simple = ∃{ID}： {0} → {1} 、
type_FunUnknown_sci_forall_several = ∀{pair_id}： {0} → {1} 、
type_FunUnknown_sci_forall_simple = ∀{ID}： {0} → {1} 、
type_FunUnknown_sci_letin_several = 
type_FunUnknown_sci_letin_simple = 
type_Fun_arg = 適用{2}の{3}
type_Fun_dec = {ID}は、アプリケーションである{2}の{3}
type_Fun_dec_body = {ID}は、アプリケーションである{2}の{3} {本体}で定義されました
type_Fun_exists_several = そこにアプリケーションの{ID} {2}の{3}その結果、
type_Fun_exists_simple = そこの{ID}アプリケーション{2}の{3}その結果、
type_Fun_forall_several = どんな{ID}アプリケーション{2}の{3}
type_Fun_forall_simple = どんな{ID}アプリケーション{2}の{3}
type_Fun_letin_several = 
type_Fun_letin_simple = {ID}はのアプリケーションである{2}の{3} {}体によって定義されました
type_Fun_sci_arg = {2} → {3}
type_Fun_sci_dec = てみましょう{ID}： {2} → {3}
type_Fun_sci_dec_body = てみましょう{idは}： {2} → {3} {本体}で定義されました
type_Fun_sci_exists_several = ∃{pair_id}： {2} → {3} 、
type_Fun_sci_exists_simple = ∃{ID}： {2} → {3} 、
type_Fun_sci_forall_several = ∀{pair_id}： {2} → {3} 、
type_Fun_sci_forall_simple = ∀{ID}： {2} → {3} 、
type_Fun_sci_letin_several = 
type_Fun_sci_letin_simple = {ID}はのアプリケーションである{2}の{3} {}体によって定義されました
type_HatColor_arg = カラー
type_HatColor_dec = いずれかの色{ID}
type_HatColor_dec_body = 
type_HatColor_exists_several = 以下のような存在{ID}色、
type_HatColor_exists_simple = 色などがある{ID}、
type_HatColor_forall_several = どんな色{ID}
type_HatColor_forall_simple = どんな色{ID}
type_HatColor_letin_several = 
type_HatColor_letin_simple = 
type_LimitExpr_arg = リミット
type_LimitExpr_dec = 値の上限{ID}
type_LimitExpr_dec_body = 限界値{ID} = {本体}があります
type_LimitExpr_exists_several = 以下のような存在{ID}の限界値、
type_LimitExpr_exists_simple = {ID}そこ制限など、その
type_LimitExpr_forall_several = どんな{ID}の限界値、
type_LimitExpr_forall_simple = どんな{ID}限界、
type_LimitExpr_letin_several = 
type_LimitExpr_letin_simple = 
type_LimitExpr_sci_arg = 
type_LimitExpr_sci_dec = 
type_LimitExpr_sci_dec_body = 
type_LimitExpr_sci_exists_several = 
type_LimitExpr_sci_exists_simple = 
type_LimitExpr_sci_forall_several = 
type_LimitExpr_sci_forall_simple = 
type_LimitExpr_sci_letin_several = 
type_LimitExpr_sci_letin_simple = 
type_Neighborhood_arg = 近傍{0}
type_Neighborhood_dec = {ID}は近傍である{0}
type_Neighborhood_dec_body = {ID}は近傍である{0} {本体}で定義されました
type_Neighborhood_exists_several = そこの{ID}地区{0}そのような
type_Neighborhood_exists_simple = {ID}は近傍に存在する{0}このようなことを、
type_Neighborhood_forall_several = どんな{ID}の地域{0}
type_Neighborhood_forall_simple = 近いどんな{ID} {0}
type_Neighborhood_letin_several = 
type_Neighborhood_letin_simple = 近い{ID} {0} {本体}で定義されました
type_Neighborhood_sci_arg = 𝓥（ {0}
type_Neighborhood_sci_dec = てみましょう{ID} {数学：𝓥のε}（ {0}
type_Neighborhood_sci_dec_body = てみましょう{ID} = {本体}
type_Neighborhood_sci_exists_several = {} {∃pair_id数学：𝓥のε}（ {0} ）
type_Neighborhood_sci_exists_simple = ∃{ID} {数学：𝓥のε}（ {0} ）
type_Neighborhood_sci_forall_several = {} {∀pair_id数学：𝓥のε}（ {0} ）
type_Neighborhood_sci_forall_simple = ∀{ID} {数学：𝓥のε}（ {0} ）
type_Neighborhood_sci_letin_several = 
type_Neighborhood_sci_letin_simple = 
type_NvarFun_arg = ℕℕに適用
type_NvarFun_dec = {ID}はℕにℕを適用してみましょう
type_NvarFun_dec_body = {ID}が{本体}で定義されたℕにℕを適用してみましょう
type_NvarFun_exists_several = 
type_NvarFun_exists_simple = 
type_NvarFun_forall_several = ℕにどんな{ID}アプリケーションℕ、
type_NvarFun_forall_simple = どんな{ID}ℕにℕを適用し、
type_NvarFun_letin_several = 
type_NvarFun_letin_simple = {ID}は{本体}で定義されたℕへℕの適用であります
type_NvarFun_sci_arg = 
type_NvarFun_sci_dec = Fましょう：ℕ→ℕ
type_NvarFun_sci_dec_body = Fましょう：ℕ→ℕ{本体}で定義されました
type_NvarFun_sci_exists_several = 
type_NvarFun_sci_exists_simple = 
type_NvarFun_sci_forall_several = 
type_NvarFun_sci_forall_simple = 
type_NvarFun_sci_letin_several = 
type_NvarFun_sci_letin_simple = {ID}は{本体}で定義されたℕへℕの適用であります
type_NvarProp_arg = 
type_NvarProp_dec = {ID}はℕに提案されたセットです
type_NvarProp_dec_body = {ID}は{VAR} fun_body {によって}行に指定された提案であります
type_NvarProp_exists_several = 
type_NvarProp_exists_simple = 
type_NvarProp_forall_several = 
type_NvarProp_forall_simple = ℕに設定どんな{ID}の提案
type_NvarProp_letin_several = 
type_NvarProp_letin_simple = 
type_NvarProp_sci_arg = 
type_NvarProp_sci_dec = {ID}はℕに提案されたセットです
type_NvarProp_sci_dec_body = {ID}は{VAR} fun_body {によって}行に指定された提案であります
type_NvarProp_sci_exists_several = 
type_NvarProp_sci_exists_simple = 
type_NvarProp_sci_forall_several = 
type_NvarProp_sci_forall_simple = ℕに設定どんな{ID}の提案
type_NvarProp_sci_letin_several = 
type_NvarProp_sci_letin_simple = 
type_NvarRel_arg = 
type_NvarRel_dec = {ID}はℕ×ℕに提案されたセットです
type_NvarRel_dec_body = 
type_NvarRel_exists_several = 
type_NvarRel_exists_simple = 
type_NvarRel_forall_several = 
type_NvarRel_forall_simple = どんなℕ×ℕ提案に定義されている{ID}、
type_NvarRel_letin_several = 
type_NvarRel_letin_simple = 
type_Nvar_arg = フル
type_Nvar_dec = 全体か、{ID}
type_Nvar_dec_body = {本体}で定義されたいずれかの全体{ID}
type_Nvar_exists_several = このような{ID}のような整数が存在し、
type_Nvar_exists_simple = {ID}、このような整数であり、
type_Nvar_forall_several = どんな整数{ID}
type_Nvar_forall_simple = どのような全体{ID}
type_Nvar_letin_several = 
type_Nvar_letin_simple = 
type_Nvar_sci_arg = ℕ
type_Nvar_sci_dec = てみましょう{ID} {数学：ε}ℕ
type_Nvar_sci_dec_body = てみましょう{ID} = {本体}
type_Nvar_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_Nvar_sci_exists_simple = ∃{ID} {数学：ε}ℕ、
type_Nvar_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_Nvar_sci_forall_simple = ∀{ID} {数学：ε}ℕ、
type_Nvar_sci_letin_several = 
type_Nvar_sci_letin_simple = 
type_O1BinRel_arg = 上の二項関係{0}
type_O1BinRel_dec = {ID}は上の二項関係である{0}
type_O1BinRel_dec_body = {ID}は上の二項関係である{0} {本体}で定義されました
type_O1BinRel_exists_several = そこに{ID}二項関係{0}そのような
type_O1BinRel_exists_simple = {ID}は上の二項関係が存在する{0}このようなことを、
type_O1BinRel_forall_several = どんな{ID}二項関係{0}
type_O1BinRel_forall_simple = どのような二項関係について{ID} {0}
type_O1BinRel_letin_several = 
type_O1BinRel_letin_simple = 
type_O1BinRel_sci_arg = {0} × {0} ）
type_O1BinRel_sci_dec = てみましょう{ID}⊆ {0} × {0}
type_O1BinRel_sci_dec_body = {ID}は上の二項関係である{0} {本体}で定義されました
type_O1BinRel_sci_exists_several = ∃{cartesian_id}⊆{cartesian_type}、
type_O1BinRel_sci_exists_simple = ∃{ID}⊆ {0} × {0} 、
type_O1BinRel_sci_forall_several = ∀{cartesian_id}⊆{cartesian_type}、
type_O1BinRel_sci_forall_simple = ∀{ID}⊆ {0} × {0} 、
type_O1BinRel_sci_letin_several = 
type_O1BinRel_sci_letin_simple = 
type_O1ExSet_arg = 一緒に
type_O1ExSet_dec = 集合{ID}ましょう
type_O1ExSet_dec_body = 集合を{ID} = {本体}
type_O1ExSet_exists_several = 例えば{ID}としてセットがあり、
type_O1ExSet_exists_simple = そのようなセット{ID}があり、
type_O1ExSet_forall_several = どんなセット{ID}
type_O1ExSet_forall_simple = かかわらず、集合{ID}の、
type_O1ExSet_letin_several = 
type_O1ExSet_letin_simple = 
type_O1ExSet_sci_arg = 一緒に
type_O1ExSet_sci_dec = 集合{ID}ましょう
type_O1ExSet_sci_dec_body = 集合を{ID} = {本体}
type_O1ExSet_sci_exists_several = ∃{ID}
type_O1ExSet_sci_exists_simple = ∃{ID}
type_O1ExSet_sci_forall_several = どんなセット{ID}
type_O1ExSet_sci_forall_simple = かかわらず、集合{ID}の、
type_O1ExSet_sci_letin_several = 
type_O1ExSet_sci_letin_simple = 
type_O1Fun_arg = アプリケーション{0}の{1}
type_O1Fun_dec = {ID}は、アプリケーションである{0}の{1}
type_O1Fun_dec_body = {ID}は、アプリケーションである{0}の{1} {本体}で定義されました
type_O1Fun_exists_several = そこにアプリケーションの{ID} {0}の{1}その結果
type_O1Fun_exists_simple = {ID}そこにアプリケーション{0}の{1}となるよう、
type_O1Fun_forall_several = どんな{ID}アプリケーション{0}の{1}
type_O1Fun_forall_simple = どんな{ID}、アプリケーション{0}の{1}
type_O1Fun_letin_several = 
type_O1Fun_letin_simple = 
type_O1Fun_sci_arg = {0} → {1}
type_O1Fun_sci_dec = てみましょう{ID}： {0} → {1}
type_O1Fun_sci_dec_body = てみましょう{idは}： {0} → {1} {本体}で定義されました
type_O1Fun_sci_exists_several = ∃{pair_id}： {0} → {1} 、
type_O1Fun_sci_exists_simple = ∃{ID}： {0} → {1} 、
type_O1Fun_sci_forall_several = ∀{pair_id}： {0} → {1} 、
type_O1Fun_sci_forall_simple = ∀{ID}： {0} → {1} 、
type_O1Fun_sci_letin_several = 
type_O1Fun_sci_letin_simple = 
type_O1Rel_arg = 関係{0} X {1}
type_O1Rel_dec = 設定のいずれかの関係{ID} {0} X {1}
type_O1Rel_dec_body = いずれかに設定関係{ID} {0} X {1}の{本体}
type_O1Rel_exists_several = 上で定義されている{ID}の関係がある{0} X {1}その結果
type_O1Rel_exists_simple = {ID}そこに設定関係{0} X {1}その結果、
type_O1Rel_forall_several = 上で定義されているものは何でも{ID}の関係{0} X {1}
type_O1Rel_forall_simple = 設定どのような関係{ID} {0} X {1} 、
type_O1Rel_letin_several = 
type_O1Rel_letin_simple = 
type_O1Rel_sci_arg = {0} X {1} ）
type_O1Rel_sci_dec = てみましょう{ID}⊆ {0} X {1}
type_O1Rel_sci_dec_body = てみましょう{ID}⊆ {0} X {1} {本体}で定義されました
type_O1Rel_sci_exists_several = ∃{cartesian_id}⊆{cartesian_type}、
type_O1Rel_sci_exists_simple = ∃{ID}⊆ {0} X {1} 、
type_O1Rel_sci_forall_several = ∀{cartesian_id}⊆{cartesian_type}、
type_O1Rel_sci_forall_simple = ∀{ID}⊆ {0} X {1} 、
type_O1Rel_sci_letin_several = 
type_O1Rel_sci_letin_simple = 
type_O1SetProp2_arg = 式
type_O1SetProp2_dec = いずれかの式{ID}
type_O1SetProp2_dec_body = {ID}は式{本体}によって定義されています
type_O1SetProp2_exists_several = このような{ID}のような式があり、
type_O1SetProp2_exists_simple = このような{ID}のような式があり、
type_O1SetProp2_forall_several = どんな式{ID}、
type_O1SetProp2_forall_simple = かかわらず、フォームの{ID}
type_O1SetProp2_letin_several = 
type_O1SetProp2_letin_simple = 
type_O1SetProp2_sci_arg = 式
type_O1SetProp2_sci_dec = いずれかの式{ID}
type_O1SetProp2_sci_dec_body = {ID}は式{本体}によって定義されています
type_O1SetProp2_sci_exists_several = 式{ID}このようなことがあり、
type_O1SetProp2_sci_exists_simple = このような{ID}のような式があり、
type_O1SetProp2_sci_forall_several = どんな式{ID}、
type_O1SetProp2_sci_forall_simple = かかわらず、フォームの{ID}
type_O1SetProp2_sci_letin_several = 
type_O1SetProp2_sci_letin_simple = 
type_O1SetProp_arg = 式
type_O1SetProp_dec = いずれかの式{ID}
type_O1SetProp_dec_body = {ID}は式{本体}によって定義されています
type_O1SetProp_exists_several = このような{ID}のような式があり、
type_O1SetProp_exists_simple = このような{ID}のような式があり、
type_O1SetProp_forall_several = どんな式{ID}、
type_O1SetProp_forall_simple = かかわらず、フォームの{ID}
type_O1SetProp_letin_several = 
type_O1SetProp_letin_simple = 
type_O1U_arg = 宇宙
type_O1U_dec = いずれかの要素{ID}
type_O1U_dec_body = いずれかの要素{ID}値{本体}
type_O1U_exists_several = このような{ID}のような要素があります
type_O1U_exists_simple = {ID}のような要素があります
type_O1U_forall_several = どんな要素{ID}
type_O1U_forall_simple = 関係なく、要素{ID}の、
type_O1U_letin_several = 
type_O1U_letin_simple = 
type_O1U_sci_arg = 宇宙
type_O1U_sci_dec = いずれかの要素{ID}
type_O1U_sci_dec_body = てみましょう{ID} = {本体}
type_O1U_sci_exists_several = ∃{ID}
type_O1U_sci_exists_simple = ∃{ID}
type_O1U_sci_forall_several = ∀{ID}
type_O1U_sci_forall_simple = ∀{ID}
type_O1U_sci_letin_several = 
type_O1U_sci_letin_simple = 
type_PHITYPE_arg = 
type_PHITYPE_dec = 
type_PHITYPE_dec_body = 
type_PHITYPE_exists_several = 
type_PHITYPE_exists_simple = 
type_PHITYPE_forall_several = 
type_PHITYPE_forall_simple = 
type_PHITYPE_letin_several = 
type_PHITYPE_letin_simple = {ID}は℘の関数である（ {2} ）℘する（ {0} ）×℘（ {1}で定義された{本体}
type_PHITYPE_sci_arg = 
type_PHITYPE_sci_dec = 
type_PHITYPE_sci_dec_body = （℘：{ID}ましょう{2} →）℘（ {0} ）×℘（ {1} ）{本体}で定義されました
type_PHITYPE_sci_exists_several = 
type_PHITYPE_sci_exists_simple = 
type_PHITYPE_sci_forall_several = 
type_PHITYPE_sci_forall_simple = 
type_PHITYPE_sci_letin_several = 
type_PHITYPE_sci_letin_simple = {ID}：℘（ {2} ）→℘（ {0} ）×℘（ {1} ）{本体}で定義されました
type_Point_arg = ポイント
type_Point_dec = てみましょう点{ID}
type_Point_dec_body = ポイントは{ID} {本体}で定義されてみましょう
type_Point_exists_several = このような{ID}などの項目があり、
type_Point_exists_simple = 点{ID}、その結果が存在します、
type_Point_forall_several = どのような点{ID}
type_Point_forall_simple = どのような点{ID}
type_Point_letin_several = 
type_Point_letin_simple = 
type_Prop_arg = 提案
type_Prop_dec = どちらかの提案{ID}
type_Prop_dec_body = {ID}が提案{本体}によって定義されています
type_Prop_exists_several = このような{ID}として提案されています、
type_Prop_exists_simple = そのような提案{ID}があり、
type_Prop_forall_several = どんな提案{ID}
type_Prop_forall_simple = かかわらず、提案の{ID}
type_Prop_letin_several = 
type_Prop_letin_simple = 
type_Rel_arg = {2} X {3} ）
type_Rel_dec = {ID}は関係ある{2} X {3}
type_Rel_dec_body = {ID}は関係れる{2} X {3} {本体}で定義されました
type_Rel_exists_several = 関係の存在{ID} {2} X {3}そのような
type_Rel_exists_simple = {ID}そこに関係{2} X {3}など、その
type_Rel_forall_several = どんな{ID}の関係{2} X {3} 、
type_Rel_forall_simple = どんな{ID}の関係{2} X {3} 、
type_Rel_letin_several = 
type_Rel_letin_simple = 
type_Rel_sci_arg = {2} X {3} ）
type_Rel_sci_dec = てみましょう{ID}⊆ {2} X {3}
type_Rel_sci_dec_body = {ID}は関係れる{2} X {3} {本体}で定義されました
type_Rel_sci_exists_several = ∃{cartesian_id}⊆{cartesian_type}、
type_Rel_sci_exists_simple = ∃⊆{ID} {2} X {3} 、
type_Rel_sci_forall_several = ∀{cartesian_id}⊆{cartesian_type}、
type_Rel_sci_forall_simple = ∀⊆{ID} {2} X {3} 、
type_Rel_sci_letin_several = 
type_Rel_sci_letin_simple = 
type_Series_arg = 以下の
type_Series_dec = シーケンス{ID}ましょう
type_Series_dec_body = {ID}は上に定義されたシーケンスである{0}による{本体} {} dom_serie
type_Series_exists_several = シーケンスは、{ID}このようなことがあります
type_Series_exists_simple = シーケンス{ID}、その結果が存在します、
type_Series_forall_several = どんなスイート{ID}
type_Series_forall_simple = かかわらず、シーケンス{ID}の、
type_Series_letin_several = 
type_Series_letin_simple = {ID}は、その後に設定されている{0}の{本体}
type_SetProp2_arg = 
type_SetProp2_dec = {Idは}に提案された集合である{0}
type_SetProp2_dec_body = 
type_SetProp2_exists_several = 
type_SetProp2_exists_simple = 
type_SetProp2_forall_several = 上で定義されているものは何でも{ID}の提案{0}
type_SetProp2_forall_simple = 上で定義されているものは何でも{ID}の提案{0}
type_SetProp2_letin_several = 
type_SetProp2_letin_simple = 
type_SetProp2_sci_arg = 
type_SetProp2_sci_dec = {ID}はに提案された集合である{0}
type_SetProp2_sci_dec_body = 
type_SetProp2_sci_exists_several = 
type_SetProp2_sci_exists_simple = 
type_SetProp2_sci_forall_several = 上で定義されているものは何でも{ID}の提案{0}
type_SetProp2_sci_forall_simple = 上で定義されているものは何でも{ID}の提案{0}
type_SetProp2_sci_letin_several = 
type_SetProp2_sci_letin_simple = 
type_SetProp_arg = 
type_SetProp_dec = {Idは}に提案された集合である{0}
type_SetProp_dec_body = 
type_SetProp_exists_several = 
type_SetProp_exists_simple = 
type_SetProp_forall_several = 上で定義されているものは何でも{ID}の提案{0}
type_SetProp_forall_simple = 上で定義されているものは何でも{ID}の提案{0}
type_SetProp_letin_several = 
type_SetProp_letin_simple = 
type_UA_arg = A
type_UA_dec = てみましょう{タイプ} {ID}
type_UA_dec_body = てみましょう{タイプ} {ID} = {本体}
type_UA_exists_several = ∃{ID} {数学：ε} {} cartesian_type、
type_UA_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UA_forall_several = ∀{ID} {数学：ε} {} cartesian_type、
type_UA_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UA_letin_several = 
type_UA_letin_simple = 
type_UA_sci_arg = A
type_UA_sci_dec = てみましょう{ID} {数学：ε}
type_UA_sci_dec_body = てみましょう{ID} = {本体}
type_UA_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_UA_sci_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UA_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_UA_sci_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UA_sci_letin_several = 
type_UA_sci_letin_simple = 
type_UB_arg = B
type_UB_dec = てみましょう{タイプ} {ID}
type_UB_dec_body = てみましょう{タイプ} {ID} = {本体}
type_UB_exists_several = ∃{ID} {数学：ε} {} cartesian_type、
type_UB_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UB_forall_several = ∀{ID} {数学：ε} {} cartesian_type、
type_UB_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UB_letin_several = 
type_UB_letin_simple = 
type_UB_sci_arg = B
type_UB_sci_dec = てみましょう{ID} {数学：ε} B
type_UB_sci_dec_body = てみましょう{ID} = {本体}
type_UB_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_UB_sci_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UB_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_UB_sci_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UB_sci_letin_several = 
type_UB_sci_letin_simple = 
type_UC_arg = C言語
type_UC_dec = てみましょう{タイプ} {ID}
type_UC_dec_body = てみましょう{タイプ} {ID} = {本体}
type_UC_exists_several = ∃{ID} {数学：ε} {} cartesian_type、
type_UC_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UC_forall_several = ∀{ID} {数学：ε} {} cartesian_type、
type_UC_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UC_letin_several = 
type_UC_letin_simple = 
type_UC_sci_arg = C言語
type_UC_sci_dec = てみましょう{ID} {数学：εのC}
type_UC_sci_dec_body = てみましょう{ID} = {本体}
type_UC_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_UC_sci_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UC_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_UC_sci_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UC_sci_letin_several = 
type_UC_sci_letin_simple = 
type_UE_arg = E
type_UE_dec = てみましょう{タイプ} {ID}
type_UE_dec_body = てみましょう{タイプ} {ID} = {本体}
type_UE_exists_several = ∃{ID} {数学：ε} {} cartesian_type、
type_UE_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UE_forall_several = ∀{ID} {数学：ε} {} cartesian_type、
type_UE_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UE_letin_several = 
type_UE_letin_simple = 
type_UE_sci_arg = E
type_UE_sci_dec = てみましょう{ID} {数学：Eのε}
type_UE_sci_dec_body = てみましょう{ID} = {本体}
type_UE_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_UE_sci_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_UE_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_UE_sci_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_UE_sci_letin_several = 
type_UE_sci_letin_simple = 
type_U_arg = {ID}
type_U_dec = てみましょう{タイプ} {ID}
type_U_dec_body = てみましょう{タイプ} {ID} = {本体}
type_U_exists_several = ∃{ID} {数学：ε} {} cartesian_type、
type_U_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_U_forall_several = ∀{ID} {数学：ε} {} cartesian_type、
type_U_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_U_letin_several = 
type_U_letin_simple = 
type_U_sci_arg = {ID}
type_U_sci_dec = てみましょう{ID} {数学：ε} {タイプ}
type_U_sci_dec_body = てみましょう{ID} = {本体}
type_U_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_U_sci_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_U_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_U_sci_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_U_sci_letin_several = 
type_U_sci_letin_simple = 
type_Universe_arg = 宇宙
type_Universe_dec = いずれかの宇宙{ID}
type_Universe_dec_body = てみましょう{ID} {本体}で定義された宇宙
type_Universe_exists_several = など{ID}宇宙が存在し、
type_Universe_exists_simple = {ID}宇宙などがあります
type_Universe_forall_several = どんな宇宙{ID}、
type_Universe_forall_simple = どんな宇宙{ID}
type_Universe_letin_several = 
type_Universe_letin_simple = 
type_WearingHat_arg = 帽子の着用者
type_WearingHat_dec = いずれかのキャップホルダ{ID}
type_WearingHat_dec_body = 
type_WearingHat_exists_several = {ID}帽子着用者などがあります
type_WearingHat_exists_simple = {ID}帽子のキャリアのような存在であります
type_WearingHat_forall_several = どんな帽子の着用者{ID}
type_WearingHat_forall_simple = かかわらず、キャップホルダ{ID}の、
type_WearingHat_letin_several = 
type_WearingHat_letin_simple = 
type_gbmember_arg = 住民
type_gbmember_dec = どちらか一人{ID}
type_gbmember_dec_body = 
type_gbmember_exists_several = そこ
type_gbmember_exists_simple = {ID}のような生活があります
type_gbmember_forall_several = どんな人{ID}
type_gbmember_forall_simple = どんな人{ID}
type_gbmember_letin_several = 
type_gbmember_letin_simple = 
type_gbmember_sci_arg = 住民
type_gbmember_sci_dec = どちらか一人{ID}
type_gbmember_sci_dec_body = 
type_gbmember_sci_exists_several = そこ
type_gbmember_sci_exists_simple = {ID}のような生活があります
type_gbmember_sci_forall_several = どんな人{ID}
type_gbmember_sci_forall_simple = どんな人{ID}
type_gbmember_sci_letin_several = 
type_gbmember_sci_letin_simple = 
type_type_default_arg = {ID}
type_type_default_dec = てみましょう{タイプ} {ID}
type_type_default_dec_body = てみましょう{タイプ} {ID} = {本体}
type_type_default_exists_several = ∃{ID} {数学：ε} {} cartesian_type、
type_type_default_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_type_default_forall_several = ∀{ID} {数学：ε} {} cartesian_type、
type_type_default_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_type_default_letin_several = 
type_type_default_letin_simple = 
type_type_default_sci_arg = {ID}
type_type_default_sci_dec = てみましょう{ID} {数学：ε} {タイプ}
type_type_default_sci_dec_body = てみましょう{ID} = {本体}
type_type_default_sci_exists_several = {} {∃pair_id数学：ε} {} cartesian_type、
type_type_default_sci_exists_simple = ∃{ID} {数学：ε{タイプ}}
type_type_default_sci_forall_several = {} {∀pair_id数学：ε} {} cartesian_type、
type_type_default_sci_forall_simple = ∀{ID} {数学：ε{タイプ}}
type_type_default_sci_letin_several = 
type_type_default_sci_letin_simple = 
