axiom_Antonym1_diagnostic=antonymie
axiom_Antonym1_justification=par antonymie de 'plus jeune' et 'plus vieux'
axiom_Antonym2_diagnostic=antonymie
axiom_Antonym2_justification=par antonymie de 'plus jeune' et 'plus vieux'
axiom_Superlative1_diagnostic=unicité
axiom_Superlative1_justification=par unicité du plus jeune
axiom_Superlative2_diagnostic=unicité
axiom_Superlative2_justification=par unicité du plus vieux
axiom_adabsurdium_diagnostic=absurde
axiom_adabsurdium_justification=par l'absurde
axiom_addsub_diagnostic=addition et soustraction
axiom_addsub_justification=par addition et soustraction de {1} à {0}
axiom_app_def_diagnostic=application
axiom_app_def_justification=par définition de {0} appliquée à {1}
axiom_app_sqrt_bounded_diagnostic=racine carrée
axiom_app_sqrt_bounded_justification=par application de la racine carrée
axiom_app_sqrt_diagnostic=racine carrée
axiom_app_sqrt_justification=par application de la racine carrée
axiom_app_square_bounded_diagnostic=carré
axiom_app_square_bounded_justification=par passage au carré
axiom_app_square_diagnostic=carré
axiom_app_square_justification=par passage au carré
axiom_apply_forall_diagnostic=application
axiom_apply_forall_justification=par application à {0}
axiom_apply_fun_lr_diagnostic=application fonctionnelle
axiom_apply_fun_lr_justification=par application à gauche et à droite de {0}
axiom_apply_ineq_inverse_diagnostic=inverse
axiom_apply_ineq_inverse_justification=par décroissance de la fonction inverse sur ℝ*
axiom_apply_ineq_sqrt_diagnostic=racine carrée
axiom_apply_ineq_sqrt_justification=par application de la racine carrée
axiom_apply_ineq_square_diagnostic=carré
axiom_apply_ineq_square_justification=par passage au carré
axiom_arith_def_diagnostic=définition
axiom_arith_def_justification=par défnition d'une suite arithmétique
axiom_arith_pro_diagnostic=formulation explicite
axiom_arith_pro_justification=par formulation explicite d'une suite arithmétique
axiom_ax_bad_diagnostic=mensonge des pires
axiom_ax_bad_justification=par mesonge des pires
axiom_ax_good_diagnostic=vérité des purs
axiom_ax_good_justification=par vérité des purs
axiom_back_elim_equiv_diagnostic=définition
axiom_back_elim_equiv_justification=par définition de l'équivalence
axiom_bound_conj_diagnostic=définition
axiom_bound_conj_justification=par définition de la double inégalité
axiom_bound_to_eq_diagnostic=encadrement
axiom_bound_to_eq_justification=par encadrement large par une valeur
axiom_bounded_elim_diagnostic=encadrement
axiom_bounded_elim_justification=par définition
axiom_case_base_binary_diagnostic=tiers exclu
axiom_case_base_binary_justification=par application du tier exclu
axiom_case_base_diagnostic=disjonction de cas
axiom_case_base_justification=par disjonction de cas
axiom_case_good_or_bad_diagnostic=disjonction pur ou pire
axiom_case_good_or_bad_justification=par disjonction pur ou pure
axiom_comb_comp_lt_diagnostic=composition
axiom_comb_comp_lt_justification=par composition d'inclusions
axiom_combadd_diagnostic=addition
axiom_combadd_justification=par addition
axiom_combine_cmp_minus_diagnostic=soustraction
axiom_combine_cmp_minus_justification=par soustraction d'inégalités
axiom_combine_cmp_plus_diagnostic=addition
axiom_combine_cmp_plus_justification=par addition d'inégalités
axiom_combsub_diagnostic=soustraction
axiom_combsub_justification=par soustraction
axiom_commutativity_diagnostic=commutativité
axiom_commutativity_justification=par commutativité
axiom_conj_diagnostic=conjonction
axiom_conj_justification=par défnition de la conjonction
axiom_deduce_not_color_diagnostic=binarité de la couleur
axiom_deduce_not_color_justification=par binarité de la couleur du chapeau
axiom_def_fbij_diagnostic=fonction bijective
axiom_def_fbij_justification=par définition d'une fonction bijective
axiom_def_fcomp_diagnostic=composition de fontions
axiom_def_fcomp_justification=par définition de la composition de fonctions
axiom_def_finj_diagnostic=injective
axiom_def_finj_justification=par définition d'une fonction injective
axiom_def_finvol_diagnostic=involutive
axiom_def_finvol_justification=par définition d'une fonction involutive
axiom_def_fsurj_diagnostic=surjective
axiom_def_fsurj_justification=par définition d'une fonction surjective
axiom_def_rantisym_diagnostic=antsymétrique
axiom_def_rantisym_justification=par définition d'une relation antisymétrique
axiom_def_rcomp_diagnostic=composition
axiom_def_rcomp_justification=par définition de la composition de relations
axiom_def_rfun_diagnostic=fonctionnelle
axiom_def_rfun_justification=par définition d'une relation fonctionnelle
axiom_def_rident_diagnostic=identité
axiom_def_rident_justification=par définition de la relation identité
axiom_def_rinj_diagnostic=injective
axiom_def_rinj_justification=par définition d'une relation injective
axiom_def_rinv_diagnostic=inverse
axiom_def_rinv_justification=par définition de la relation inverse
axiom_def_rrefl_diagnostic=réflexive
axiom_def_rrefl_justification=par définition d'une relation réflexive
axiom_def_rsurj_diagnostic=surjective
axiom_def_rsurj_justification=par définition d'une relation surjective
axiom_def_rsym_diagnostic=symétrique
axiom_def_rsym_justification=par définition d'une relation symétrique
axiom_def_rtotleft_diagnostic=totale à gauche
axiom_def_rtotleft_justification=par définition d'une relation totale à gauche
axiom_def_rtrans_diagnostic=transitive
axiom_def_rtrans_justification=par définition d'une relation transitive
axiom_elim_comp_diagnostic=inégalité large
axiom_elim_comp_justification=par définition de l'inégalité large
axiom_elim_conj_left_diagnostic=déduction à gauche
axiom_elim_conj_left_justification=par déduction à gauche
axiom_elim_conj_right_diagnostic=déduction à droite
axiom_elim_conj_right_justification=par déduction à droite
axiom_elim_eqfun_diagnostic=égalité fonctionnelle
axiom_elim_eqfun_justification=par définition de l'égalité fonctionnelle
axiom_elim_eqset_diagnostic=égalité
axiom_elim_eqset_justification=par définition de l'égalité ensembliste
axiom_elim_even_def_diagnostic=parité
axiom_elim_even_def_justification=par définition de la parité
axiom_elim_false_exset_diagnostic=ensemble vide
axiom_elim_false_exset_justification=par définition de l'ensemble vide
axiom_elim_gen_app_rel_diagnostic=graphe
axiom_elim_gen_app_rel_justification=par définition du graphe d'une relation
axiom_elim_has_finite_limit_decr_diagnostic=convergence décroissante
axiom_elim_has_finite_limit_decr_justification=par décroissance et minoration
axiom_elim_has_finite_limit_incr_diagnostic=convergence coissante
axiom_elim_has_finite_limit_incr_justification=par croissance et majoration
axiom_elim_is_elem_universe_diagnostic=univers
axiom_elim_is_elem_universe_justification=par définition de l'univers
axiom_elim_multiple_diagnostic=définition
axiom_elim_multiple_justification=par définition de la divisibilité
axiom_elim_negation_diagnostic=définition
axiom_elim_negation_justification=par définition de la négation
axiom_elim_pprod_diagnostic=produit cartésien
axiom_elim_pprod_justification=par définition du produit cartésien
axiom_elim_requiv_diagnostic=équivalence
axiom_elim_requiv_justification=par définition d'une relation d'équivalence
axiom_elim_scomp_diagnostic=complément
axiom_elim_scomp_justification=par définition du complément
axiom_elim_sdiff_diagnostic=différence
axiom_elim_sdiff_justification=par définition de la différence ensembliste
axiom_elim_sequiv_diagnostic=classe d'équivalence
axiom_elim_sequiv_justification=par définition d'une classe d'équivalence
axiom_elim_set_lteq_diagnostic=inclusion
axiom_elim_set_lteq_justification=par définition de l'inclusion
axiom_elim_shas_lower_bound_diagnostic=borne inférieure
axiom_elim_shas_lower_bound_justification=par définition
axiom_elim_shas_upper_bound_diagnostic=borne supérieure
axiom_elim_shas_upper_bound_justification=par définition
axiom_elim_sinter_diagnostic=intersection
axiom_elim_sinter_justification=par définition de l'intersection
axiom_elim_sis_decreasing_diagnostic=décroissance
axiom_elim_sis_decreasing_justification=par définition
axiom_elim_sis_gt_zero_diagnostic=strictement positive
axiom_elim_sis_gt_zero_justification=par définition
axiom_elim_sis_increasing_diagnostic=croissance
axiom_elim_sis_increasing_justification=par définition
axiom_elim_sis_lt_zero_diagnostic=strictement négative
axiom_elim_sis_lt_zero_justification=par définition
axiom_elim_subset_diagnostic=parties d'un ensemble
axiom_elim_subset_justification=par définition des parties d'un ensemble
axiom_elim_sunion_diagnostic=union
axiom_elim_sunion_justification=par définition de l'union
axiom_elim_true_at_rank_diagnostic=définition de P
axiom_elim_true_at_rank_justification=par définition de {0}
axiom_eq_inverse_diagnostic=inverse
axiom_eq_inverse_justification=par passage à l'inverse
axiom_eq_reverse_diagnostic=opposé
axiom_eq_reverse_justification=par passage à lopposé
axiom_eq_symmetry_diagnostic=symétrie
axiom_eq_symmetry_justification=par symétrie de la relation d'égalité
axiom_eq_trans_diagnostic=transitivité
axiom_eq_trans_justification=par transitivité de la relation d'égalité
axiom_equiv_rtrans_diagnostic=Transitive
axiom_equiv_rtrans_justification=par caractérisation ensembliste d'une relation transitive
axiom_ex_elim_diagnostic=par extraction
axiom_ex_elim_justification=par extraction d'un témoin
axiom_ex_intro_diagnostic=par construction
axiom_ex_intro_justification=par construction d'un témoin
axiom_expand_diagnostic=développement
axiom_expand_justification=par développement
axiom_factorize_diagnostic=factorisation remarquable
axiom_factorize_justification=par factorisation par {1}
axiom_falseall_diagnostic=ex falso quodlibet
axiom_falseall_justification=par déduction d'une contradiction
axiom_gen_factorize_diagnostic=factorisation
axiom_gen_factorize_justification=par factorisation de {0} par {1}
axiom_geo_def_diagnostic=définition
axiom_geo_def_justification=par définition d'une suite géométrique
axiom_geo_pro_diagnostic=formulation explicite
axiom_geo_pro_justification=par formulation explicite d'une suite géométrique
axiom_inclusionsimpl_diagnostic=simplification
axiom_inclusionsimpl_justification=par réécriture de {1} en {0}
axiom_ind_basic_forall_diagnostic=récurrence
axiom_ind_basic_forall_justification=par récurrence
axiom_ind_init_diagnostic=récurrence à partir de
axiom_ind_init_justification=par récurrence
axiom_ineq_sym_rew_diagnostic=réciproque
axiom_ineq_sym_rew_justification=par réécriture réciproque
axiom_intro_false_diagnostic=non-contradiction
axiom_intro_false_justification=par le principe de non-contradiction
axiom_intro_or_left_diagnostic=justification à gauche
axiom_intro_or_left_justification=par justification à gauche
axiom_intro_or_right_diagnostic=justification à droite
axiom_intro_or_right_justification=par justification à droite
axiom_intro_sqrt_square_diagnostic=racine d'un carré
axiom_intro_sqrt_square_justification=par simplification de la racine d'un carré
axiom_limit_finite_diagnostic=limite finie
axiom_limit_finite_justification=par calcul de limite finie
axiom_limit_inf_diagnostic=limite +∞
axiom_limit_inf_justification=par calcul de limite vers +∞
axiom_limit_neg_inf_diagnostic=limite -∞
axiom_limit_neg_inf_justification=par calcul de limite vers -∞
axiom_linearsimpl_diagnostic=simplification
axiom_linearsimpl_justification=par simplification de {0}
axiom_local_theo_justification=par application du théorème local {0}
axiom_lradd_bounded_diagnostic=addition
axiom_lradd_bounded_justification=par addition à gauche et à droite de {0}
axiom_lradd_diagnostic=addition
axiom_lradd_ineq_diagnostic=addition
axiom_lradd_ineq_justification=par addition à gauche et à droite de {0}
axiom_lradd_justification=par addition à gauche et à droite de {0}
axiom_lradd_neq_diagnostic=addition
axiom_lradd_neq_justification=par addition à gauche et à droite de {0}
axiom_lrdiv_bounded_diagnostic=division
axiom_lrdiv_bounded_justification=par division à gauche et à droite par {0}
axiom_lrdiv_diagnostic=division
axiom_lrdiv_ineq_diagnostic=division
axiom_lrdiv_ineq_justification=par division à gauche et à droite par {0}
axiom_lrdiv_justification=par division à gauche et à droite par {0}
axiom_lrdiv_neq_diagnostic=division
axiom_lrdiv_neq_justification=par division à gauche et à droite par {0}
axiom_lrmul_bounded_diagnostic=multiplication
axiom_lrmul_bounded_justification=par multiplication à gauche et à droite par {0}
axiom_lrmul_diagnostic=multiplication
axiom_lrmul_ineq_diagnostic=multiplication
axiom_lrmul_ineq_justification=par multiplication à gauche et à droite par {0}
axiom_lrmul_justification=par multiplication à gauche et à droite par {0}
axiom_lrmul_neq_diagnostic=multiplication
axiom_lrmul_neq_justification=par multiplication à gauche et à droite par {0}
axiom_lrsub_bounded_diagnostic=soustraction
axiom_lrsub_bounded_justification=par soustraction à gauche et à droite de {0}
axiom_lrsub_diagnostic=soustraction
axiom_lrsub_ineq_diagnostic=soustraction
axiom_lrsub_ineq_justification=par soustraction à gauche et à droite de {0}
axiom_lrsub_justification=par soustraction à gauche et à droite de {0}
axiom_lrsub_neq_diagnostic=soustraction
axiom_lrsub_neq_justification=par soustraction à gauche et à droite de {0}
axiom_lt_next_int_diagnostic=entier suivant
axiom_lt_next_int_justification=par transition vers l'entier suivant
axiom_modus_ponens_diagnostic=modus ponens
axiom_modus_ponens_justification=par application du modus ponens
axiom_muldiv_diagnostic=multiplication haut et bas
axiom_muldiv_justification=par multiplication haut et bas par {1}
axiom_neq_symmetry_diagnostic=symétrie
axiom_neq_symmetry_justification=par symétrie de la relation d'inégalité
axiom_non_zero_gt_diagnostic=supériorité stricte
axiom_non_zero_gt_justification=par supériorité stricte
axiom_non_zero_lt_diagnostic=infériorité stricte
axiom_non_zero_lt_justification=par infériorité stricte
axiom_polysquare_diagnostic=carré polynomial
axiom_polysquare_justification=par identification du carré {0}
axiom_proddecompl_diagnostic=décomposition
axiom_proddecompl_justification=par décomposition du produit
axiom_proddef_diagnostic=assocication
axiom_proddef_justification=par associativité de l'opérateur produit appliquée à {0}
axiom_prodinverse_diagnostic=parcours à rebours
axiom_prodinverse_justification=par parcours à rebours de l'indice
axiom_prodlinear_diagnostic=associativité
axiom_prodlinear_justification=par associativité de l'opérateur produit appliquée à {0}
axiom_prodresult1_diagnostic=prodresult1
axiom_prodresult1_justification=prodresuult1
axiom_prodsimpl_diagnostic=prodsimpl
axiom_prodsimpl_justification=prodsimpl
axiom_produpshift_diagnostic=décalage d'indice
axiom_produpshift_justification=par décalage des indices
axiom_reason_capacity_diagnostic=capacité à raisonner
axiom_reason_capacity_justification=par capacité du porteur de chapeaux à raisonner
axiom_red_true_at_rank_diagnostic=définition
axiom_red_true_at_rank_justification=par définition de {0}
axiom_reducedenom_diagnostic=dénominateur commun
axiom_reducedenom_justification=par réduction au même dénominateur
axiom_rewriting_diagnostic=réécriture
axiom_rewriting_justification=par réécriture de {0} en {1}
axiom_sandwich_diagnostic=gendarmes
axiom_sandwich_justification=par le théorème des gendarmes
axiom_section_diagnostic=création de portée
axiom_section_justification=démonstration
axiom_set_absorb_diagnostic=absorbtion
axiom_set_absorb_justification=par absorbtion
axiom_set_adabsurdum_diagnostic=absurde
axiom_set_adabsurdum_justification=par involution du complément
axiom_set_demorgan_diagnostic=lois de De Morgan
axiom_set_demorgan_justification=d'après les lois de De Morgan
axiom_set_eq_symmetry_diagnostic=symétrie
axiom_set_eq_symmetry_justification=par symétrie de la relation d'égalité
axiom_set_eq_trans_diagnostic=transitivité
axiom_set_eq_trans_justification=par transitivité de la relation d'égalité
axiom_set_excluded_diagnostic=tiers exclu
axiom_set_excluded_justification=par application du tiers exclu
axiom_set_inter_comb_diagnostic=intersection
axiom_set_inter_comb_justification=par intersection à gauche et à droite
axiom_set_lteq_transitivity_diagnostic=transitivité
axiom_set_lteq_transitivity_justification=par transitivité de l'inclusion
axiom_set_neutral_diagnostic=élément neutre
axiom_set_neutral_justification=par propriété de l'élément neutre
axiom_set_rewriting_diagnostic=réécriture
axiom_set_rewriting_justification=par réécriture de {0} en {1}
axiom_set_union_comb_diagnostic=union
axiom_set_union_comb_justification=par union à gauche et à droite
axiom_setassociative_diagnostic=associativité
axiom_setassociative_justification=par associativité
axiom_setcommutative_diagnostic=commutativité
axiom_setcommutative_justification=par commutativité
axiom_setdevelopp_diagnostic=développement
axiom_setdevelopp_justification=par développement
axiom_setfactorize_diagnostic=factorisation
axiom_setfactorize_justification=par factorisation
axiom_sigmadecompl_diagnostic=décomposition
axiom_sigmadecompl_justification=par décomposition du sigma
axiom_sigmadef_diagnostic=association
axiom_sigmadef_justification=par associativité de l'opérateur sigma appliquée à {0}
axiom_sigmainverse_diagnostic=parcours à rebours
axiom_sigmainverse_justification=par parcours à rebours de l'indice
axiom_sigmalinear_diagnostic=linéarité
axiom_sigmalinear_justification=par linéarité de l'opérateur sigma appliquée à {0}
axiom_sigmaresult1_diagnostic=premiers entiers
axiom_sigmaresult1_justification=par somme des premiers entiers
axiom_sigmaresult2_diagnostic=premiers carrés
axiom_sigmaresult2_justification=par somme des premiers carrés
axiom_sigmaresult3_diagnostic=premières puissances
axiom_sigmaresult3_justification=par somme des premières puissances
axiom_sigmasimpl_diagnostic=comptage
axiom_sigmasimpl_justification=par somme de la constante 1
axiom_sigmaupshift_diagnostic=décalage d'indice
axiom_sigmaupshift_justification=par décalage des indices
axiom_slim_def_elim_diagnostic=limite finie
axiom_slim_def_elim_justification=par définition de la limite
axiom_slim_inf_def_elim_diagnostic=limite infinie
axiom_slim_inf_def_elim_justification=par définition d'une limte infinie
axiom_slimfinite_inf_elim_diagnostic=limite infinie
axiom_slimfinite_inf_elim_justification=
axiom_square_diff_diagnostic=différence de carrés
axiom_square_diff_justification=par factorisation de la différence de carrés
axiom_subadd_diagnostic=soustraction et addition
axiom_subadd_justification=par soustraction et addition de {1} à {0}
axiom_trans_lt_gt_diagnostic=transitivité
axiom_trans_lt_gt_justification=par transitivité
axiom_updownsimpl_diagnostic=simplification haut et bas
axiom_updownsimpl_justification=par simplification haut et bas
axiom_varchange_diagnostic=changement de variable
axiom_varchange_justification=par réécriture de {0} en {1}
basic_A=A
basic_BeMarried=être marié
basic_BeMarried_neg=ne pas être marié
basic_BeScottish=être écossais
basic_BeScottish_neg=ne pas être écossais
basic_BlackHat=noir
basic_ExprGT={0} > {1}
basic_ExprGTEQ={0} ≥ {1}
basic_ExprLT={0} < {1}
basic_ExprLTEQ={0} ≤ {1}
basic_FBij={0} est bijective
basic_FComp={0} ∘ {1}
basic_FFInj={1} est injective sur [ 0 ... {0} ]
basic_FFMono={1} est strictement croissante sur [ 0 ... {0} ]
basic_FInj={0} est injective
basic_FInj_neg={0} n'est pas injective
basic_FInvolution={0} est involutive
basic_FSurj={0} est surjective
basic_FSurj_neg={0} n'est pas surjective
basic_False=contradiction
basic_False_sci=Faux
basic_FindX=Trouver la valeur de x.
basic_FindY=Trouver la valeur de y.
basic_GoOutSundays=sortir le dimanche
basic_GoOutSundays_neg=ne pas sortir le dimanche
basic_GoToMatch=aller au match demain
basic_GoToMatch_neg=ne pas aller au match demain
basic_GoToTraining=aller à l'entraînement aujourd'hui
basic_GoToTraining_neg=ne pas aller à l'entraînement aujourd'hui
basic_O1FInj={0} est injective
basic_O1FInj_neg={0} n'est pas injective
basic_O1FSurj={0} est surjective
basic_O1FSurj_neg={0} n'est pas surjective
basic_OldYoungUtterance=Quel est le plus jeune, quel est le plus âgé ?
basic_Oldest={0} est l'enfant le plus âgé
basic_Oldest_neg={0} n'est pas l'enfant le plus âgé
basic_PropDependentN=proposition dépendant de n
basic_RAntiSym={0} est antisymétrique
basic_RComp={0} . {1}
basic_REquiv={0} est une relation d'équivalence
basic_RFun={0} est fonctionnelle
basic_RIRRefl={0} est irréflexive
basic_RInj={0} est injective
basic_RInv={0} ⁻¹
basic_RRefl={0} est réflexive
basic_RSurj={0} est surjective
basic_RSym={0} est symétrique
basic_RTot={0} est totale
basic_RTotLeft={0} est totale à gauche
basic_RTrans={0} est transitive
basic_ScottishUtterance=Le club écossais.
basic_Set=ensemble
basic_ToBeHuman=être humain
basic_ToBeHuman_neg=ne pas être humain
basic_ToBeMortal=être mortel
basic_ToBeMortal_neg=ne pas être mortel
basic_ToBeSocrate=être Socrate
basic_ToBeSocrate_neg=ne pas être Socrate
basic_WearAKilt=porter un kilt
basic_WearAKilt_neg=ne pas porter de kilt
basic_WearRedSocks=porter des chaussettes rouges
basic_WearRedSocks_neg=ne pas porter de chaussettes rouges
basic_WhiteHat=blanc
basic_Youngest={0} est l'enfant le plus jeune
basic_Youngest_neg={0} n'est pas l'enfant le plus jeune
basic_addition=par addition de {0}
basic_and=et
basic_and_sci=∧
basic_app_fun_exset={0} ( {1} )
basic_app_prop={0} ( {1} )
basic_app_prop2={0} ( {1} , {2} )
basic_app_prop2_sci={0} ( {1} , {2} )
basic_app_prop_sci={0} ( {1} )
basic_app_rel={1} {0} {2}
basic_app_rel_sci={1} {0} {2}
basic_are_collinear={0} sont colinéaires
basic_are_collinear_neg={0} ne sont pas colinéaires
basic_are_parallel={0} et {1} sont parallèles
basic_are_parallel_neg={0} et {1} ne sont pas parallèles
basic_arith_elim=par définition d'une suite aritmétique
basic_case=cas {0} : {1}
basic_demonstrate_lim=Démontrer que {0} admet pour limite {1}
basic_determine=Déterminer {0}
basic_determine_lim=Déterminer la valeur limite de {0}
basic_determine_reason=Déterminer la raison de la suite {0}
basic_determine_value=Déterminer la valeur de {0}
basic_development=par développement
basic_division=par division par {0}
basic_division_and_multiplication=par division et multiplication par {0}
basic_elim_is_solution_equiv=par définition
basic_elim_limit_expr_b=par définition d'une limite gauche ou droite
basic_elim_rewrite_equiv=par réécriture
basic_eq_symmetry_equiv=par symétrie de la relation d'égalité
basic_equation=l'équation {0}
basic_equiv={0} {math:⇔} {1}
basic_equiv1={0} {math:⇔} {1}
basic_equiv1_sci={0} {math:⇔} {1}
basic_equiv_sci={0} {math:⇔} {1}
basic_expansion=par développement
basic_expansion_of_power=par définition de puissance
basic_expr_is_defined_on={0} est définie sur {1}
basic_expr_is_defined_on_neg={0} n'est pas définie sur {1}
basic_factorization=par factorisation
basic_findLimitExpr=déterminer la valeur limite {0} telle que, {1}
basic_find_asymptot={find} la comportement asymptotique de {0} en {1}
basic_find_expr={find} la valeur de {0} {justTags}
basic_find_limit={find} la limite de {0} en {1} {justTags}
basic_find_limit_type={find} le comportement de {0} en l'infini
basic_find_series_type={find} le type de la suite {0}
basic_floor_id=Ent
basic_fun_has_finite_limit={0} est convergente
basic_fun_has_lower_bound={0} est minorée
basic_fun_has_upper_bound={0} est majorée
basic_fun_is_bounded={0} est bornée
basic_fun_is_constant={0} est constante
basic_fun_is_decreasing={0} est décroissante
basic_fun_is_decreasing_neg={0} n'est pas décroissante
basic_fun_is_defined_on={0} est définie sur {1}
basic_fun_is_gt_zero={0} est strictement positive
basic_fun_is_increasing={0} est croissante
basic_fun_is_increasing_neg={0} n'est pas croissante
basic_fun_is_lt_zero={0} est strictement négative
basic_gen_app_rel={1} {0} {2}
basic_gen_app_rel_sci={1} {0} {2}
basic_geoconstr=par construction de {0}
basic_id={0}
basic_imply=implique
basic_imply_sci={math:⇒}
basic_ind_basic_evar_0=Rang d'initialisation
basic_is_add_increasing=l'addition est croissante pour la relation '{0}'
basic_is_aware={0} sait que {1}
basic_is_aware_neg={0} ne sait pas que {1}
basic_is_bad={0} est pire
basic_is_big_enough={0} est grand
basic_is_crossed=le quadrilatère {0} est croisé
basic_is_crossed_neg=le quadrilatère {0} n'est pas croisé
basic_is_defined_on={0} est définie sur {1}
basic_is_definition_set={0} est l'ensemble de définition de {1}
basic_is_element_dom={0} {math:∊} {1}
basic_is_even={0} est pair
basic_is_good={0} est pur
basic_is_in_neighbourhood_of={0} est dans un voisinage de {1}
basic_is_integer={0} est un entier
basic_is_lci={0} est une loi de composition interne sur {1}
basic_is_lci_neg={0} n'est pas une loi de composition interne sur {1}
basic_is_middle_segment={0} est le milieu du segment {1}
basic_is_middle_segment_neg={0} n'est pas le milieu du segment {1}
basic_is_monotonic_on={0} est décroissante sur {1}
basic_is_multiple_of={0} est divisible par {1}
basic_is_multiple_of_neg={0} n'est pas divisible par {1}
basic_is_odd={0} est impair
basic_is_parallelogram={0} est un parallèlogramme
basic_is_parallelogram_neg={0} n'est pas un parallèlogramme
basic_is_partition={1} est une partition de {0}
basic_is_polynom={0} est un polynôme
basic_is_projected_on={0} est le projeté orthogonal de {1} sur {2}
basic_is_reflexive=La relation '{0}' est réflexive
basic_is_solution={0} est l'ensemble des solutions de {1}
basic_is_solution_neg={0} n'est pas solution de {1}
basic_is_symmetric={0} est le symétrique de {2} par rapport à {1}
basic_is_transitive=La relation '{0}' est transitive
basic_isolate=Isoler {0}
basic_knows_hatcolor={0} connaît la couleur de son chapeau
basic_knows_hatcolor_neg={0} ne connaît pas la couleur de son chapeau
basic_le=≤
basic_lor_elim=Hypothèse suffisante
basic_multiplication_and_division=par multiplication et division par {0}
basic_nats={0} avec {1}
basic_neighborset={0}
basic_not=non
basic_not_sci=¬
basic_oldyoung=plus jeune, plus âgé
basic_or=ou
basic_or_sci=∨
basic_pis_element={0} {math:∊} {1}
basic_pis_element_neg={0} n'est pas élément de {1}
basic_pis_element_sci={0} {math:∊} {1}
basic_pis_element_sci_neg={0} {math:∉} {1}
basic_proddecompr=par décomposition
basic_proddownshift=par décalage d'indice
basic_pset3={0} {1} et {2}
basic_rel_is_defined_on={0} est définie sur {1}
basic_rel_is_defined_on_neg={0} n'est pas définie sur {1}
basic_rel_le=≤
basic_resolve=Résoudre {0}
basic_rewrite_in={1} se réécrit en {2} dans {0}
basic_ror_elim=Hypothèse suffisante
basic_say={0} dit que {1}
basic_set_lt={0} ⊂ {1}
basic_set_lteq={0} ⊆ {1}
basic_shas_finite_limit={0} est convergente
basic_shas_limit={0} admet pour limite {1}
basic_shas_limit_neg={0} n'admet pas pour limite {1}
basic_sigmadecompr=par décomposition du sigma
basic_sigmadownshift=par décalage des indices
basic_sis_arith={0} est arithmétique
basic_sis_arith_neg={0} n'est pas arithmétique
basic_sis_arith_reason={0} est arithmétique de raison {1}
basic_sis_arith_reason_neg={0} n'est pas arithmétique de raison {1}
basic_sis_caracterized=La suite {0} est-elle arithmétique ou géométrique ?
basic_sis_element={0} {math:∊} {1}
basic_sis_element_neg={0} {math:∉} {1}
basic_sis_element_sci={0} {math:∊} {1}
basic_sis_element_sci_neg={0} {math:∉} {1}
basic_sis_geo={0} est géométrique
basic_sis_geo_neg={0} n'est pas géométrique
basic_sis_geo_reason={0} est géométrique de raison {1}
basic_sis_geo_reason_neg={0} n'est pas géométrique de raison {1}
basic_subtraction=par soustraction de {0}
basic_subtraction_and_addition=par soustraction et addition de {0}
basic_triv_div_lr=par division des deux membres de {0}
basic_true_at_rank={0} est vraie au rang {1}
basic_true_at_rank_neg={0} est fausse au rang {1}
basic_true_at_rank_sci={0} ( {1} )
basic_true_at_rank_sci_neg=¬ {0} ( {1} )
basic_uprod={0}×{1}
basic_wears_hat={0} porte un chapeau {1}
basic_wears_hat_neg={0} ne porte pas un chapeau {1}
help_part_content=Contenu
help_part_paper=Copie numérique
help_section_browsing=Navigation
help_section_commutativity=Commutativité
help_section_evar=Inconnues de raisonnement
help_section_exercises=Exercices
help_section_proof=Démonstration
help_section_selection=Sélection
help_section_trophy=Cocardes
help_section_unification=Unifications
key_Product=Produit
key_access_content=Contenu
key_access_date=Date d'expiration
key_access_role=Rôle
key_access_role_ref=Référent
key_access_role_user=Étudiant
key_account=Mon compte
key_add=Ajouter
key_add_exercise_message=Ecrivez l'enoncé de l'exercice ...
key_add_exercise_title=Demande d'ajout d'exercice
key_and=et
key_apply=Appliquer
key_ask_hint_button=Afficher
key_assume=Supposons que
key_back_connection_panel=Pour revenir à l'écran de connexion,
key_browsing_train=Exercices
key_by=d'après {0}
key_cancel=Annuler
key_catchme=Attrapez ceci
key_change_password=Changement de mot de passe
key_chapters=Chapitres
key_character_not_available=caractère non disponible
key_check_box=cocher la case
key_check_cgu=CGU
key_check_text_cgu=Accepter les
key_class=Classe
key_class_default_message=Vous n'appartenez à aucune classe.
key_click_here=cliquez ici
key_clickme=Cliquez ici
key_clickme_fix=Corrigez et cliquez ici pour valider
key_clickme_valid=Cliquez ici pour valider
key_commuteme=Obtenez ci-dessus la valeur suivante :
key_conclusion=Conclusion
key_confirm_delete_tab_message=Supprimer la portée ?
key_confirm_delete_tab_message_yes=Oui
key_confirm_password=Confirmation du mot de passe
key_confirm_quit_exercise=Abandonner l'exercice en cours ?
key_congrats=Bravo, l’exercice est démontré !
key_connection=Connexion
key_construct=Construire
key_context=Contexte
key_create_account=Créer un compte
key_create_account_connect=Créer un compte / se connecter
key_credits=jetons
key_credits_content_message=Acheter directement le contenu de l'application.
key_credits_content_title=Contenu
key_credits_pack_message=Avec les jetons, débloquer du contenu dans l'application.
key_credits_pack_pack1_title=Découverte
key_credits_pack_pack2_title=Entraînement
key_credits_pack_pack3_title=Ultime
key_credits_pack_title=Crédits
key_deduce=Déduire
key_deduce_in=Déduire dans
key_deduce_of=Déduction à partir de
key_deduce_scope=Déduire dans cette portée
key_delete=Supprimer
key_delete_account=Suppression du compte
key_delete_account_message=Un email a été envoyé pour supprimer le compte
key_delete_message=Pour supprimer le compte, tapez dans la zone ci-dessous 'SUPPRIMER' en toute lettre et cliquez sur OK.
key_delete_word=SUPPRIMER
key_deleted_account=Le compte de {0} a été supprimé. A bientôt !
key_demonstrate=Démontrer
key_description_back=<div>Justifier la proposition <!--{type="tag" input="{statementId}"}--> en invoquant la règle : <!--{type="axiom_api" input="{axiomId}"}--></div>
key_description_backsel=<div>Justifier la proposition <!--{type="tag" input="{statementId}"}--> en invoquant la règle : <!--{type="axiom_api" input="{axiomId}"}--></div>
key_description_delete=<div>Supprimer la proposition <!--{type="tag" input="{statementId}"}--></div>
key_description_deleteby=<div>Supprimer la justification de la proposition <!--{type="tag" input="{statementId}"}--></div>
key_description_for=<div>Déduire de <!--{type="tag" input="{statementId}"}--> par <!--{type="axiom_api" input="{axiomId}"}--></div>
key_description_forsel=<div>Déduire de <!--{type="tag" input="{statementId}"}--> par <!--{type="axiom_api" input="{axiomId}"}--></div>
key_description_inst=Entrer la valeur <!--{type="expr" input="{actTypArg2}"}--> dans <!--{type="paper_evar" input="{actTypArg}"}--></div>
key_description_section=Ouvrir la portée de la proposition <!--{type="tag" input="{statementId}"}-->
key_description_success=<div>Bravo, l'exercice est terminé.</div>
key_description_unif=Unifier les propositions <!--{type="tag" input="{actTypArg}"}--> et <!--{type="tag" input="{statementId}"}-->
key_diagnostic_no_diag=Les entrées de ce chapitre ne sont pas encore disponibles.
key_disconnect=Se déconnecter
key_draggable_title=Déplacer les opérandes
key_dragme=Glissez ici
key_email=Email
key_email_not_authorized=email non autorisé
key_email_not_found=email non trouvé
key_email_not_valid=email non valide
key_email_not_verif=email non vérifié
key_email_unknown=email inconnu
key_email_used=email utilisé
key_email_valid=email valide
key_empty_field=champ vide
key_empty_suggest=Aucune entrée disponible pour cette action
key_error_paper_subtitle=Not found
key_error_paper_title=cannot retrieve this paper
key_exercise=Exercice
key_exercises=Exercices
key_fill_evar=Valeur de
key_find=déterminer
key_firstname=Prénom
key_focus_text=Contexte
key_follow_us=Actualité
key_forbid_mobile=L'application n'est pas disponible sur mobile
key_forgot_password=Mot de passe oublié ?
key_geo_figure=Figure géométrique
key_get_credits=Recharger les jetons
key_goal=Objectif
key_got_it=C'est noté.
key_graph=Graphe
key_group_popup_button=Ajouter
key_group_popup_input_default=code d'accès
key_group_popup_title=Entrer un code d'accès
key_help=Aide
key_help_tooltip_chapter_icon_all=cocarde 'Universel'
key_help_tooltip_chapter_icon_diag=cocarde 'Express'
key_help_tooltip_chapter_icon_tuto=cocarde 'Didacticiel'
key_help_tooltip_chapter_icon_unavoidable=cocarde 'Incontournable'
key_help_tooltip_clearall=tout effacer
key_help_tooltip_deduce=diagnostic en déduction
key_help_tooltip_exercise_icon_diag=permet d'obtenir la cocarde 'Express'
key_help_tooltip_exercise_icon_difficulty_easy=facile
key_help_tooltip_exercise_icon_difficulty_hard=difficile
key_help_tooltip_exercise_icon_difficulty_medium=moyen
key_help_tooltip_exercise_icon_hint=indication
key_help_tooltip_exercise_icon_unavoidable=exercice incontournable
key_help_tooltip_hint=indication
key_help_tooltip_justify=diagnostic en justification
key_help_tooltip_lock_access_no=non accessible
key_help_tooltip_lock_access_without_deadline=accessible
key_help_tooltip_print=imprimer
key_help_tooltip_redo=refaire
key_help_tooltip_section=créer une portée
key_help_tooltip_undo=annuler
key_help_tooltip_unify=unification
key_highlight_icon_backward=justification
key_highlight_icon_definition=définition
key_highlight_icon_forward=déduction
key_highlight_icon_reduce=réduction
key_hint_message=Cliquer sur le bouton ci-dessous pour afficher une indication de résolution
key_hintpopup_action=Action
key_hintpopup_actions=Actions
key_hintpopup_description=Description
key_hintpopup_preview=Aperçu
key_hintpopup_tab_desc=Description
key_hintpopup_tab_hint=Indication
key_home_credits_text=Nombres de jetons
key_home_dashboard_badges=Cocardes
key_home_dashboard_exercises=Exercices résolus
key_home_profile_text=Bienvenue, {firstname}
key_ice=Une erreur interne est survenue. Merci de relancer l'application.
key_id_connection=Connexion
key_if=si
key_img_text_1=Mettre à jour
key_img_text_2=ma photo de profil
key_inputme=Renseignez la valeur suivante :
key_justify=Justifier
key_justify_of=Justification de
key_language=Langue
key_lastname=Nom
key_legend=Légende :
key_levels=Niveaux
key_loading_message=Chargement, veuillez patienter ...
key_local_theorem=Théorème local
key_login_with=Se connecter avec :
key_main_scope=la portée principale
key_membership_alreadyadd=déjà ajouté
key_membership_error=erreur
key_membership_notfound=code inconnu
key_membership_overused=quota atteint
key_modify=Modifier
key_nats={0} avec {1}
key_need_help=Besoin d'aide ?
key_new_exercise=Nouvel exercice
key_next=Suivant
key_no_email_message=Votre adresse email n'est pas visible pour ce mode de connexion, merci de vous reconnecter d'une autre manière.
key_not_yet_register=Si vous n'êtes pas encore inscrit,
key_ok=OK
key_or=ou
key_password=Mot de passe
key_password_confirmed=mot de passe confirmé
key_password_current=Mot de passe actuel
key_password_incorrect=le mot de passe est incorrect
key_password_new=Nouveau mot de passe
key_password_not_confirmed=mot de passe non confirmé
key_password_too_short=mot de passe trop court (au moins 6 caractères)
key_password_valid=mot de passe valide
key_password_with_digit=le mot de passe doit contenir au moins 1 chiffre
key_premises=Prémisses
key_preview=Aperçu
key_preview_deduce=Aperçu de la déduction de
key_preview_justify=Aperçu de la justification de
key_profile_informations=Informations de profil
key_proof_of=Démonstration de
key_propdeftag_def=la définition
key_propdeftag_prop=la proposition
key_prove_text=Démonstration
key_prove_text_close=Démonstration ...
key_prove_text_open=Démonstration :
key_register=S'inscrire
key_registration=Inscription
key_reinit=Réinitialiser
key_reinit_password=Entrez votre email pour réinitialiser le mot de passe
key_reinit_password_message=Un email a été envoyé pour réinitialiser le mot de passe
key_report_input_default=Demandez de l'aide ou signalez un problème
key_report_label=Envoyez-nous un message
key_report_label_email=Votre adresse e-mail :
key_report_message_sent=Message envoyé !
key_report_modify_message=Modifier le message
key_report_next=Suivant
key_report_placeholder_email=adresse e-mail
key_report_recontact=Nous vous recontacterons.
key_report_send=Envoyer
key_require_message=Pour accéder à ce chapitre, obtenez les cocardes 'didacticiel' des chapitres ci-dessous :
key_require_message_exercise=Pour accéder à cet exercice, obtenez les cocardes 'didacticiel' des chapitres ci-dessous :
key_require_message_part=Pour accéder aux chapitres, obtenez les cocardes 'didacticiel' des chapitres ci-dessous :
key_required=Prérequis :
key_save=Enregistrer
key_scroll_down=Faire défiler vers le bas
key_scroll_up=Faire défiler vers le haut
key_segments=Segments
key_selectme=Sélectionnez l'expression ci-dessus
key_send=Envoyer
key_social_login=<div class="{0}"> Le <a target="_blank" href="http://fr.wikipedia.org/wiki/Social_login" class="{1}">social login</a> est le moyen le plus simple et le plus sûr de créer un compte et de se connecter. Rien ne sera publié sur votre "mur". </div> <div class="{2}">En cliquant sur l'un des boutons, vous acceptez nos <a target="_blank" href="{3}" class="{4}">conditions d'utilisation</a> et notre <a target="_blank" href="{5}" class="{6}">politique de confidentialité</a>.</div>
key_sorry_whitelist=L'application n'est pas encore disponible. Si vous souhaitez vous inscrire, merci d'envoyer un mail à : contact@edukera.com
key_start=Commencer
key_status_report=Signaler un problème
key_step_choice_axiom=<div class="instruction-item"><!--{type="hint_itemize"}--> Dans la section <span class="hint-text"> <!--{type="label_toolbox" input="{TPartId}"}--></span> <!--{type="toolbox_button" input="{TPartId}"}--> accéder au chapitre à l'aide des boutons <!--{type="label_toolbox" input="{TChapterId}"}--> <!--{type="toolbox_button" input="{TChapterId}"}--> <!--{type="hint_check"}--></div>
key_step_choice_axiom_in_diag=<div class="instruction-item"> <!--{type="hint_itemize"}--> Choisir l'axiome <!--{type="diag_axiom" input="{axiomId}"}--> dans la section <!--{type="diag_axiom_part" input="{TSectionId}"}--> <!--{type="hint_check"}--></div>
key_step_choice_question_tab=<div class="instruction-item"> <!--{type="hint_itemize"}--> Choisir, dans la copie, l'onglet <!--{type="question_tab" input="{tabQuestionValue}"}--> <!--{type="hint_check"}--></div>
key_step_choice_tab_index_in_diag=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur l'onglet <!--{type="diag_tab" input="{actIdx}"}--> <!--{type="hint_check"}--></div>
key_step_click_apply=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur <!--{type="button_apply"}--> de la fenêtre d'aperçu. <!--{type="hint_check"}--></div>
key_step_click_deduce=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur <!--{type="button_deduce"}--> de <!--{type="propdeftag" input="{statementId}"}--> <!--{type="tag" input="{statementId}"}--> pour faire apparaître la fenêtre de diagnostic. <!--{type="hint_check"}--></div>
key_step_click_justify=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur <!--{type="button_justify"}--> de la proposition <!--{type="tag" input="{statementId}"}--> pour faire apparaître la fenêtre de diagnostic. <!--{type="hint_check"}--></div>
key_step_delete=<div class="instruction-item"> <!--{type="hint_itemize"}--> Supprimer la proposition <!--{type="tag" input="{statementId}"}--> <!--{type="hint_check"}--></div>
key_step_deleteby=<div class="instruction-item"> <!--{type="hint_itemize"}--> Supprimer la justification de la proposition <!--{type="tag" input="{statementId}"}--> <!--{type="hint_check"}--></div>
key_step_drag=<div class="instruction-item"> <!--{type="hint_itemize"}--> Glisser l'axiome <!--{type="toolbox_item" readonly="true" input="{axiomId}"}--> de la section <!--{type="label_toolbox" class="toolbox-section-title-content" input="{TSectionId}"}-->. <!--{type="hint_check"}--></div>
key_step_drop=<div class="instruction-item"> <!--{type="hint_itemize"}--> Le lâcher sur <!--{type="propdeftag" input="{statementId}"}--> <!--{type="tag" input="{statementId}"}--> <!--{type="hint_check"}--></div>
key_step_enter_expr_in_diag=<div class="instruction-item"> <!--{type="hint_itemize"}--> Entrer la valeur <!--{type="expr" statement="{statementId}" input="{actArgItemSecond}"}--> au clavier virtuel pour <!--{type="evar" input="{evarId}"}--> <!--{type="hint_check"}--></div>
key_step_inst=<div class="instruction-item"> <!--{type="hint_itemize"}--> Entrer la valeur <!--{type="expr" input="{actTypArg2}"}--> dans <!--{type="paper_evar" input="{actTypArg}"}--> <!--{type="hint_check"}--></div>
key_step_open_toolbox=<div class="instruction-item"> <!--{type="hint_itemize"}--> Ouvrir la boîte à outil à l'aide du bouton <!--{type="toolbox_header_button"}--> <!--{type="hint_check"}--></div>
key_step_section=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur <!--{type="button_section"}--> de la proposition <!--{type="tag" input="{statementId}"}--> <!--{type="hint_check"}--></div>
key_step_selection=<div class="instruction-item"> <!--{type="hint_itemize"}--> Sélectionner, dans la proposition <!--{type="tag" input="{statementId}"}-->, le terme surligné en bleu ci-dessous : <br> <div>  <!--{type="prop" statement="{statementId}" input="{selectionProp}"}-->  <!--{type="hint_check"}--> </div></div>
key_step_unification=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur <!--{type="button_unify" input="{actTypArg}"}--> de la proposition <!--{type="tag" input="{statementId}"}--> <!--{type="hint_check"}--></div>
key_step_unify_in_diag=<div class="instruction-item"> <!--{type="hint_itemize"}--> Cliquer sur <!--{type="button_unify" input="{actUnifItem}"}--> <!--{type="hint_check"}--></div>
key_sub_subscription_sentence=Merci pour l'inscription, un email de confirmation vous a été envoyé.
key_success_trophy_message=Bravo, vous venez d'obtenir la cocarde {trophyId}, du chapitre {chapterId}
key_success_trophy_title=Cocarde {trophyId}
key_task_justify_label=Reste à justifier
key_then=alors
key_to_justify=à justifier
key_toolbox_error_message=Cet axiome ne peut être appliqué sur cette proposition.
key_tooltip_axiom_close=cacher la formule
key_tooltip_axiom_open=afficher la formule
key_tooltip_context_close=afficher le contexte
key_tooltip_context_open=cacher le contexte
key_tooltip_section_close=cacher la section
key_tooltip_section_open=afficher la section
key_trophy_diagnostic=diagnostic
key_trophy_exercises=exercice
key_trophy_tutorial=didacticiel
key_trophy_unavoidable=incontournable
key_tutorial=Didacticiel
key_uid=Identifiant
key_unlock=Débloquer
key_update_browser=Vous utilisez actuellement le navigateur {browser} en version {current_version}. Cette version n'est pas compatible avec l'application edukera. Merci de mettre à jour ou de changer de navigateur.
key_usage=Utilisation
key_utterance=Énoncé
key_validate=Valider
key_with=avec
key_without_hint=Cet exercice n'offre pas le service d'indication de résolution.
key_yes=Oui
pager_account=Mon compte
pager_adabusrdum=Absurde
pager_algebra=Algèbre
pager_algebra_structures=Structures algébriques
pager_algebra_structures_01=
pager_analysis=Analyse
pager_analysis_induction=Récurrence
pager_analysis_limits=Limites
pager_analysis_series=Suites
pager_analysis_series_05=
pager_badges=Cocardes
pager_classical=Classiques
pager_comb=Systèmes d'équations
pager_commutativity=Commutativité
pager_credits=Crédits
pager_dashboard=Suivi
pager_demo_bernoulli_1=Inégalité de Bernoulli 1
pager_demo_bernoulli_2=Inégalité de Bernoulli 2
pager_demo_medium_ex_02=Divisibilité
pager_demo_seg=Calcul algébrique
pager_demo_tuto_app=Applications
pager_demo_tuto_comb=Combinaisons
pager_demo_tuto_first=Opérations à gauche et à droite
pager_demo_tuto_fun=Définitions
pager_demo_tuto_neq=Inégalité
pager_demo_tuto_rel=Transitivité
pager_demo_tuto_serie=Limite de 1/n
pager_demo_tuto_sigma=La somme des n premiers entiers
pager_demorgan=De Morgan
pager_easy=Facile
pager_enigma=Enigmes
pager_eq_seg=Egalité
pager_eqothers=Mixtures
pager_existence=Existence
pager_expansion=Distributivité
pager_finj=Injectivité
pager_funpigeon=Principe des tiroirs
pager_funsurj=Surjectivité
pager_good_bad=Vérités et mensonges
pager_hard=Difficile
pager_ind_bernouilli=Inégalités
pager_ind_divis=Divisibilité
pager_ind_sum=Calculs de somme
pager_ineq_ex_15=Opérations
pager_ineq_ex_20=Combinaisons
pager_ineq_ex_22=Encadrement
pager_ineq_ex_24=Applications
pager_ineq_ex_25=Relation
pager_ineq_seg=Inégalités
pager_ineq_system=Systèmes d'inéquations
pager_ineqs=Inéquations
pager_limits_finite=Limites de fonctions en un point fini
pager_limits_inf=Limites de fonctions en l'infini
pager_limits_prop=Propriétés par définition
pager_limits_series=Limites de suites
pager_logic=Logique
pager_logic_connector=Connecteurs
pager_logic_connector_abs_peirce=La loi de Peirce par l'absurde
pager_logic_connector_associativity=Associativités
pager_logic_connector_classical=Logique classique
pager_logic_connector_constructivism=Logique constructiviste
pager_logic_connector_deMorgan_laws=Lois de De Morgan
pager_logic_connector_distributivity=Distributivités
pager_logic_connector_ex_easy_01=Distributivité de la disjonction
pager_logic_connector_ex_easy_02=Distributivité de la conjonction
pager_logic_connector_ex_easy_06=Existence d'un entier
pager_logic_connector_ex_easy_08=Le syllogisme
pager_logic_connector_ex_easy_12=Lois de De Morgan 3/3
pager_logic_connector_ex_easy_13=Lois de De Morgan 1/3
pager_logic_connector_ex_easy_14=Associativité de la conjonction
pager_logic_connector_ex_easy_16=La contraposée 1/2
pager_logic_connector_ex_easy_17=La contraposée 2/2
pager_logic_connector_ex_easy_27=Associativité de la disjonction
pager_logic_connector_ex_easy_31=Raisonnement par l'absurde
pager_logic_connector_ex_easy_32=Lois de De Morgan 2/3
pager_logic_connector_ex_easy_33=Distributivité de la disjonction
pager_logic_connector_ex_easy_34=Distributivité de la conjonction
pager_logic_connector_negation=Négations
pager_logic_connector_peirce_abs_te=L'absurde par la loi de Peirce
pager_logic_connector_peirce_law=Loi de Peirce
pager_logic_connector_reasoning=Raisonnements
pager_logic_connector_training=Basiques
pager_logic_connector_tuto_01=Prouver une conjonction
pager_logic_connector_tuto_02=Déduire d'une conjonction
pager_logic_connector_tuto_03=Prouver une disjonction
pager_logic_connector_tuto_04=Disjonction de cas
pager_logic_connector_tuto_06=Prouver une implication
pager_logic_connector_tuto_07=Déduire d'une implication
pager_logic_connector_tuto_08=Prouver une négation
pager_logic_connector_tuto_085=Déduire d'une négation
pager_logic_connector_tuto_09=Ex falso quodlibet
pager_logic_connector_tuto_10=Tiers exclu
pager_logic_function=Fonctions
pager_logic_quantifer_tuto_2=Univers des entiers
pager_logic_quantifier=Quantificateurs
pager_logic_quantifier_21=Le club écossais
pager_logic_quantifier_ex_01=Distributivité de l'union
pager_logic_quantifier_ex_02=Distributivité de l'intersection
pager_logic_quantifier_ex_03=Loi de De Morgan 1/2
pager_logic_quantifier_ex_04=Loi de De Morgan 2/2
pager_logic_quantifier_ex_05=Parties d'un ensemble
pager_logic_quantifier_ex_06=Distributivité du produit cartésien
pager_logic_quantifier_ex_07=Distributivité existentielle
pager_logic_quantifier_ex_easy_08=Lois de De Morgan 2/2
pager_logic_quantifier_ex_easy_09=Lois de De Morgan 1/2
pager_logic_quantifier_ex_le_01=Etre plus petit que
pager_logic_quantifier_ex_le_02=Etre plus petit que (2)
pager_logic_quantifier_ex_le_03=Etre plus petit que (3)
pager_logic_quantifier_ex_le_04=Vérités et mensonges 1/4
pager_logic_quantifier_ex_le_05=Vérités et mensonges 2/4
pager_logic_quantifier_ex_le_06=Vérités et mensonges 3/4
pager_logic_quantifier_ex_le_07=Vérités et mensonges 4/4
pager_logic_quantifier_ex_le_08=Inverse, Injection
pager_logic_quantifier_ex_le_10=Relations totales
pager_logic_quantifier_ex_le_13=Principe des tiroirs 1/2
pager_logic_quantifier_ex_le_14=Principe des tiroirs 2/2
pager_logic_quantifier_ex_le_15=Relations binaires
pager_logic_quantifier_ex_le_37=Distributivité du produit cartésien
pager_logic_quantifier_ex_le_40=Fonction, injection
pager_logic_quantifier_ex_le_41=Surjection
pager_logic_quantifier_ex_le_42=Involution, bijection
pager_logic_quantifier_ex_le_43=Composition
pager_logic_quantifier_ex_le_48=Tiers exclu par l'absurde
pager_logic_quantifier_ex_le_52=Symétrie de l'égalité
pager_logic_quantifier_ex_le_53=Transitivité de l'égalité
pager_logic_quantifier_ex_le_54=Transitivité de l'inclusion
pager_logic_quantifier_ex_le_67=Intersection d'égalités
pager_logic_quantifier_ex_le_68=Union d'égalités
pager_logic_quantifier_ex_le_69=Intersection d'inclusions
pager_logic_quantifier_ex_le_70=Union d'inclusions
pager_logic_quantifier_ex_le_71=Madame Confuse
pager_logic_quantifier_ex_le_72=L'énigme des trois chapeaux
pager_logic_quantifier_tuto_01=Prouver une existence
pager_logic_quantifier_tuto_02=Déduire d'une existence
pager_logic_quantifier_tuto_03=Prouver un théorème
pager_logic_quantifier_tuto_04=Déduire d'un théorème
pager_logic_relation=Relations
pager_logic_relation_tuto_01=Graphe d'une relation
pager_logic_relation_tuto_04=Equivalences
pager_logic_relation_tuto_05=Composition
pager_logic_set_rewrite_01=Réécriture
pager_logic_set_rewrite_03=Associativité
pager_logic_set_rewrite_04=Commutativité
pager_logic_set_rewrite_05=Simplification
pager_logic_set_rewrite_06=Développement/Factorisation
pager_logic_set_rewrite_08=Symétrie de l'égalité
pager_logic_set_rewrite_09=Transitivité de l'égalité
pager_logic_set_rewrite_10=Transitivité de l'inclusion
pager_logic_set_rewrite_11=Combinaisons
pager_logic_settheory_tuto_01=Intersection
pager_logic_settheory_tuto_02=Union
pager_logic_settheory_tuto_03=Différence
pager_logic_settheory_tuto_04=Complément
pager_logic_settheory_tuto_05=Inclusion
pager_logic_settheory_tuto_06=Egalité
pager_logic_settheory_tuto_07=Ensemble vide
pager_logic_settheory_tuto_08=Parties
pager_logic_settheory_tuto_09=Produit cartésien
pager_lrops=Opérations à gauche et à droite
pager_medium=Moyen
pager_relcar=Caratérisation ensembliste
pager_relcomp=Composition
pager_relequiv=Equivalence
pager_relinv=Inverse
pager_relle=Relation '≤'
pager_reltrans=Transitivité
pager_rew_almostsquare=Carrés presque parfaits
pager_rew_conjugate=Valeurs conjuguées
pager_rew_equation=Equations
pager_rew_factorize=Factorisations
pager_rew_gold=Nombre d'or
pager_rew_system=Systèmes d'équations
pager_rew_tuto_develop=Développement
pager_rew_tuto_fact1=Factorisation
pager_rew_tuto_fact2=Factorisation remarquable
pager_rew_tuto_group=Groupement
pager_rew_tuto_idrem1=Carré parfait
pager_rew_tuto_idrem2=Différence de carrés
pager_rew_tuto_misc1=Commutativité
pager_rew_tuto_misc2=Réécriture
pager_rew_tuto_op=Opérations
pager_rew_tuto_simpl=Simplifications
pager_rew_tuto_simpl2=Dénominateur commun
pager_rew_tuto_varchange=Changement de variable
pager_rewrite_seg=Réécritures
pager_root=Accueil
pager_series_arith=Suites arithmétiques
pager_series_arithgeo=Suites arithmético-géométriques
pager_series_bounded=Suites bornées
pager_series_ex_01=
pager_series_geo=Suites géométriques
pager_series_variation=Sens de variation
pager_set_operators=Opérations
pager_set_rewoperators=Calculs ensemblistes
pager_setcomb=Combinaisons
pager_setdemorgan=De Morgan
pager_setdistrib=Distributivités
pager_setinclusion=Inclusions
pager_setprop=Propriétés
pager_settheory=Ensembles
pager_sigma_ex_15=Somme des premiers entiers
pager_sigma_ex_16=Somme des premiers carrés
pager_sigma_ex_18=Décomposition
pager_sigma_ex_19=Association
pager_sigma_ex_20=Décalage d'indice
pager_sigma_ex_21=Somme des premières puissances
pager_sigma_ex_22=Linéarité
pager_sigma_ex_23=Sommes remarquables
pager_sigma_ref=Sommes de référence
pager_sigma_seg=Sigma
pager_sigma_telescop=Sommes téléscopiques
pager_sigma_withref=A l'aide des sommes de référence
pager_syllogism=Syllogismes
toolbox_analysis=Analyse
toolbox_appdef=Définition de fonction
toolbox_arith_series=Suite arithmétique
toolbox_binrel=Relation homogène
toolbox_calculus=Calcul
toolbox_combinaison=Combinaisons
toolbox_conjunction=Conjonction
toolbox_connector=Connecteur
toolbox_converge=Convergence
toolbox_disjonction=Disjonction
toolbox_distrib=Distributivité
toolbox_eq=Egalité
toolbox_eqfun=Egalité
toolbox_eqrel=Relation d'égalité
toolbox_eqset=Egalité
toolbox_equiv=Equivalence
toolbox_exists=Quantificateur existentiel
toolbox_fact=Factorielle
toolbox_forall=Quantificateur universel
toolbox_function=Fonction
toolbox_funop=Opérateurs fonctionnels
toolbox_geo_series=Suite géométrique
toolbox_implication=Implication
toolbox_induction=Quel que soit l'entier n, ...
toolbox_ineq=Inégalité
toolbox_ineqapp=Applications
toolbox_ineqbound=Encadrement
toolbox_ineqcomb=Combinaisons
toolbox_ineqconv=Conversions
toolbox_ineqrel=Relation
toolbox_leftright=Opérations à gauche et à droite
toolbox_leftright_ineq=Opérations à gauche et à droite
toolbox_leftright_neq=Inégalités
toolbox_limfinite=Limite en un point
toolbox_limitinf=Limite en l'infini
toolbox_limitops=Opérations
toolbox_limits=Limite
toolbox_logic=Logique
toolbox_logicothers=Logique classique
toolbox_lrapply=Applications
toolbox_multiple=Divisibilité
toolbox_negation=Négation
toolbox_oldest=Etre le plus agé
toolbox_operation=Opération
toolbox_operation_rewrite=Réécriture
toolbox_prod=
toolbox_prodidx=
toolbox_prodrem=
toolbox_quantifier=Quantificateurs
toolbox_quantifier_confuse=Mme. Confuse
toolbox_quantifier_truthlie=Vérités et mensonges
toolbox_relation=Relation
toolbox_relops=Opérateurs relationnels
toolbox_relothers=Relations remarquables
toolbox_relprop=Relation
toolbox_relset=Relations ensemblistes
toolbox_remid=Identités remarquables
toolbox_rewops=Opérations
toolbox_rewprops=Réécritures
toolbox_rewrite=Réécriture
toolbox_series=Suites
toolbox_series_limitation=Limitation
toolbox_series_sign=Signe
toolbox_series_variation=Variation
toolbox_set=Ensemble
toolbox_set_comb=Combinaisons
toolbox_set_rewriting=Réécritures
toolbox_setexpr=Caractérisation ensembliste
toolbox_setfun=Fonction
toolbox_setgraph=Graphe
toolbox_setops=Opérations
toolbox_sigma=Réécritures du sigma
toolbox_sigmaidx=Changements d'indice
toolbox_sigmarem=Sommes remarquables
toolbox_simpl=Simplifications
toolbox_slteq=Inclusion
toolbox_somesets=Ensembles remarquables
toolbox_sophiehat=Le chapeau de sophie
toolbox_sophiehattheory=Théorie des chapeaux
toolbox_true_at_rank=Vraie au rang n
toolbox_truthlie=Vérités et mensonges
toolbox_youngest=Etre le plus jeune
type_BinRel_arg=relation binaire de {1}
type_BinRel_dec=Soit {id} une relation binaire de {1}
type_BinRel_dec_body=Soit {id} une relation binaire de {1} définie par {body}
type_BinRel_exists_several=il existe {id} des relations binaires de {1} telles que,
type_BinRel_exists_simple=il existe {id} une relation binaire de {1} telle que,
type_BinRel_forall_several=quelles que soient {id} les relations binaires sur {1},
type_BinRel_forall_simple=quelle que soit {id} la relation binaire sur {1},
type_BinRel_letin_several=
type_BinRel_letin_simple=
type_BinRel_sci_arg=({1}×{1})
type_BinRel_sci_dec=Soit {id} ⊆ {1}×{1}
type_BinRel_sci_dec_body=Soit {id} une relation binaire de {1} définie par {body}
type_BinRel_sci_exists_several=∃ {cartesian_id} ⊆ {cartesian_type},
type_BinRel_sci_exists_simple=∃ {id} ⊆ {1}×{1},
type_BinRel_sci_forall_several=∀ {cartesian_id} ⊆ {cartesian_type},
type_BinRel_sci_forall_simple=∀ {id} ⊆ {1}×{1},
type_BinRel_sci_letin_several=
type_BinRel_sci_letin_simple=
type_Child_arg=enfant
type_Child_dec=Soit l'enfant {id}
type_Child_dec_body=
type_Child_exists_several=il existe des enfants {id} tels que
type_Child_exists_simple=il existe un enfant {id} tel que
type_Child_forall_several=quels que soient les enfant {id},
type_Child_forall_simple=quel que soit l'enfant {id},
type_Child_letin_several=
type_Child_letin_simple=
type_Child_sci_arg=enfant
type_Child_sci_dec=Soit l'enfant {id}
type_Child_sci_dec_body=
type_Child_sci_exists_several=il existe des enfants {id} tels que
type_Child_sci_exists_simple=il existe un enfant {id} tel que
type_Child_sci_forall_several=quels que soient les enfant {id},
type_Child_sci_forall_simple=quel que soit l'enfant {id},
type_Child_sci_letin_several=
type_Child_sci_letin_simple=
type_Domain_arg=intervalle
type_Domain_dec=Soit l'intervalle {id}
type_Domain_dec_body=Soit l'intervalle {id} défini par {body}
type_Domain_exists_several=il existe {id} des intervalles tels que,
type_Domain_exists_simple=il existe {id} un intervalle tel que,
type_Domain_forall_several=quels que soient {id} les intervalles;
type_Domain_forall_simple=quel que soit {id} l'intervalle
type_Domain_letin_several=
type_Domain_letin_simple=
type_Domain_sci_arg=intervalle
type_Domain_sci_dec=Soit l'intervalle {id}
type_Domain_sci_dec_body=Soit {id} = {body}
type_Domain_sci_exists_several=∃ {id},
type_Domain_sci_exists_simple=∃ {id},
type_Domain_sci_forall_several=∀ {id},
type_Domain_sci_forall_simple=∀ {id},
type_Domain_sci_letin_several=
type_Domain_sci_letin_simple=
type_ExSet_arg={id}
type_ExSet_dec=Soit l'ensemble {id}
type_ExSet_dec_body=Soit l'ensemble {id} défini par {body}
type_ExSet_exists_several=il existe des ensembles {id} tels que,
type_ExSet_exists_simple=il existe un ensemble {id} tel que,
type_ExSet_forall_several=quels que soient les ensembles {id},
type_ExSet_forall_simple=quel que soit l'ensemble {id},
type_ExSet_letin_several=
type_ExSet_letin_simple=
type_ExSet_sci_arg={id}
type_ExSet_sci_dec=Soit l'ensemble {id}
type_ExSet_sci_dec_body=Soit l'ensemble {id} défini par {body}
type_ExSet_sci_exists_several=il existe des ensembles {id} tels que,
type_ExSet_sci_exists_simple=il existe un ensemble {id} tel que,
type_ExSet_sci_forall_several=quels que soient les ensembles {id},
type_ExSet_sci_forall_simple=quel que soit l'ensemble {id},
type_ExSet_sci_letin_several=
type_ExSet_sci_letin_simple=
type_ExprFun_arg=l'application de ℝ vers ℝ
type_ExprFun_dec=Soit {id} l'application de ℝ vers ℝ
type_ExprFun_dec_body=Soit {id} l'application de ℝ vers ℝ définie par {body}
type_ExprFun_exists_several=
type_ExprFun_exists_simple=
type_ExprFun_forall_several=quelles que soient {id} les applications de ℝ vers ℝ,
type_ExprFun_forall_simple=quelle que soit {id} l'application de ℝ vers ℝ,
type_ExprFun_letin_several=
type_ExprFun_letin_simple=
type_ExprFun_sci_arg=
type_ExprFun_sci_dec=Soit f : ℝ→ℝ
type_ExprFun_sci_dec_body=Soit f : ℝ→ℝ définie par {body}
type_ExprFun_sci_exists_several=
type_ExprFun_sci_exists_simple=
type_ExprFun_sci_forall_several=
type_ExprFun_sci_forall_simple=
type_ExprFun_sci_letin_several=
type_ExprFun_sci_letin_simple=
type_Expr_arg=réel
type_Expr_dec=Soit le réel {id}
type_Expr_dec_body=Soit le réel {id} défini par {body}
type_Expr_exists_several=il existe des réels {id} tels que,
type_Expr_exists_simple=il existe un réel {id} tel que,
type_Expr_forall_several=quels que soient les réels {id},
type_Expr_forall_simple=quel que soit le réel {id},
type_Expr_letin_several=
type_Expr_letin_simple={id} le réel {id} défini par {body}
type_Expr_sci_arg=ℝ
type_Expr_sci_dec=Soit {id} {math:∊} ℝ
type_Expr_sci_dec_body=Soit {id}={body}
type_Expr_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_Expr_sci_exists_simple=∃ {id} {math:∊} ℝ,
type_Expr_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_Expr_sci_forall_simple=∀ {id} {math:∊} ℝ,
type_Expr_sci_letin_several=
type_Expr_sci_letin_simple={id} {math:∊} ℝ, {id} = {body}
type_FRel_arg=
type_FRel_dec=
type_FRel_dec_body=
type_FRel_exists_several=
type_FRel_exists_simple=
type_FRel_forall_several=
type_FRel_forall_simple=
type_FRel_letin_several=
type_FRel_letin_simple=
type_FRel_sci_arg={2}×{3}
type_FRel_sci_dec=Soit {id} ⊆ {2}×{3}
type_FRel_sci_dec_body=
type_FRel_sci_exists_several=
type_FRel_sci_exists_simple=
type_FRel_sci_forall_several=∀ {cartesian_id} ⊆ {cartesian_type},
type_FRel_sci_forall_simple=∀ {id} ⊆ {2}×{3},
type_FRel_sci_letin_several=
type_FRel_sci_letin_simple=
type_FunDef_arg=la fonction définie sur {2}
type_FunDef_dec=Soit {id} une fonction définie sur {2}
type_FunDef_dec_body=Soit {id} une fonction définie sur {2} par {body}
type_FunDef_exists_several=il existe {id} des fonctions définies sur {2} telles que,
type_FunDef_exists_simple=il existe {id} une fonction définie sur {2} telle que,
type_FunDef_forall_several=quelles que soient {id} les fonctions définies sur {2},
type_FunDef_forall_simple=quelle que soit {id} la fonction définie sur {2},
type_FunDef_letin_several=
type_FunDef_letin_simple={id} est la fonction définie sur {2} par {body}
type_FunDef_sci_arg={2}→{2}
type_FunDef_sci_dec=Soit {id} : {2}→{2}
type_FunDef_sci_dec_body=Soit {id} : {2}→{2} définie par {body}
type_FunDef_sci_exists_several=∃ {pair_id} : {2}→{2},
type_FunDef_sci_exists_simple=∃ {id} : {2}→{2},
type_FunDef_sci_forall_several=∀ {pair_id} : {2}→{2},
type_FunDef_sci_forall_simple=∀ {id} : {2}→{2},
type_FunDef_sci_letin_several=
type_FunDef_sci_letin_simple={id} est la fonction définie sur {2} par {body}
type_FunUnknown_arg=la fonction
type_FunUnknown_dec=Soit {id} une fonction
type_FunUnknown_dec_body=Soit {id} une fonction définie par {body}
type_FunUnknown_exists_several=il existe {id} des fonctions telles que,
type_FunUnknown_exists_simple=il existe {id} une fonction telle que,
type_FunUnknown_forall_several=quelles que soient {id} les fonctions,
type_FunUnknown_forall_simple=quelle que soit {id} la fonction,
type_FunUnknown_letin_several=
type_FunUnknown_letin_simple={id} est la fonction définie par {body}
type_FunUnknown_sci_arg={0}→{1}
type_FunUnknown_sci_dec=Soit {id} : {0}→{1}
type_FunUnknown_sci_dec_body=Soit {id} : {0}→{1} définie par {body}
type_FunUnknown_sci_exists_several=∃ {pair_id} : {0}→{1},
type_FunUnknown_sci_exists_simple=∃ {id} : {0}→{1},
type_FunUnknown_sci_forall_several=∀ {pair_id} : {0}→{1},
type_FunUnknown_sci_forall_simple=∀ {id} : {0}→{1},
type_FunUnknown_sci_letin_several=
type_FunUnknown_sci_letin_simple=
type_Fun_arg=l'application de {2} vers {3}
type_Fun_dec=Soit {id} une application de {2} vers {3}
type_Fun_dec_body=Soit {id} une application de {2} vers {3} définie par {body}
type_Fun_exists_several=il existe {id} des applications de {2} vers {3} telles que,
type_Fun_exists_simple=il existe {id} une application de {2} vers {3} telle que,
type_Fun_forall_several=quelles que soient {id} les applications de {2} vers {3},
type_Fun_forall_simple=quelle que soit {id} l'application de {2} vers {3},
type_Fun_letin_several=
type_Fun_letin_simple={id} est l'application de {2} vers {3} définie par {body}
type_Fun_sci_arg={2}→{3}
type_Fun_sci_dec=Soit {id} : {2}→{3}
type_Fun_sci_dec_body=Soit {id} : {2}→{3} définie par {body}
type_Fun_sci_exists_several=∃ {pair_id} : {2}→{3},
type_Fun_sci_exists_simple=∃ {id} : {2}→{3},
type_Fun_sci_forall_several=∀ {pair_id} : {2}→{3},
type_Fun_sci_forall_simple=∀ {id} : {2}→{3},
type_Fun_sci_letin_several=
type_Fun_sci_letin_simple={id} est l'application de {2} vers {3} définie par {body}
type_HatColor_arg=couleur
type_HatColor_dec=Soit la couleur {id}
type_HatColor_dec_body=
type_HatColor_exists_several=il existe {id} des couleurs telles que,
type_HatColor_exists_simple=il existe {id} une couleur telle que,
type_HatColor_forall_several=quelles que soient les couleurs {id},
type_HatColor_forall_simple=quelle que soit la couleur {id},
type_HatColor_letin_several=
type_HatColor_letin_simple=
type_LimitExpr_arg=valeur limite
type_LimitExpr_dec=Soit la valeur limite {id}
type_LimitExpr_dec_body=Soit la valeur limite {id} = {body}
type_LimitExpr_exists_several=il existe {id} des valeurs limites telles que,
type_LimitExpr_exists_simple=il existe {id} une valeur limite telle que,
type_LimitExpr_forall_several=quelles que soient {id} les valeurs limites,
type_LimitExpr_forall_simple=quelle que soit {id} la valeur limite,
type_LimitExpr_letin_several=
type_LimitExpr_letin_simple=
type_LimitExpr_sci_arg=
type_LimitExpr_sci_dec=
type_LimitExpr_sci_dec_body=
type_LimitExpr_sci_exists_several=
type_LimitExpr_sci_exists_simple=
type_LimitExpr_sci_forall_several=
type_LimitExpr_sci_forall_simple=
type_LimitExpr_sci_letin_several=
type_LimitExpr_sci_letin_simple=
type_Neighborhood_arg=le voisinage de {0}
type_Neighborhood_dec=Soit {id} un voisinage de {0}
type_Neighborhood_dec_body=Soit {id} un voisinage de {0} défini par {body}
type_Neighborhood_exists_several=il existe {id} des voisinages de {0} tels que,
type_Neighborhood_exists_simple=il existe {id} un voisinage de {0} tel que,
type_Neighborhood_forall_several=quels que soient {id} les voisinages de {0},
type_Neighborhood_forall_simple=quel que soit {id} le voisinage de {0},
type_Neighborhood_letin_several=
type_Neighborhood_letin_simple={id} le voisinage de {0} défini par {body}
type_Neighborhood_sci_arg=𝓥({0})
type_Neighborhood_sci_dec=Soit {id} {math:∊} 𝓥({0})
type_Neighborhood_sci_dec_body=Soit {id}={body}
type_Neighborhood_sci_exists_several=∃ {pair_id} {math:∊} 𝓥({0}),
type_Neighborhood_sci_exists_simple=∃ {id} {math:∊} 𝓥({0}),
type_Neighborhood_sci_forall_several=∀ {pair_id} {math:∊} 𝓥({0}),
type_Neighborhood_sci_forall_simple=∀ {id} {math:∊} 𝓥({0}),
type_Neighborhood_sci_letin_several=
type_Neighborhood_sci_letin_simple=
type_NvarFun_arg=l'application de ℕ vers ℕ
type_NvarFun_dec=Soit {id} l'application de ℕ vers ℕ
type_NvarFun_dec_body=Soit {id} l'application de ℕ vers ℕ définie par {body}
type_NvarFun_exists_several=
type_NvarFun_exists_simple=
type_NvarFun_forall_several=quelles que soient {id} les applications de ℕ vers ℕ,
type_NvarFun_forall_simple=quelle que soit {id} l'application de ℕ vers ℕ,
type_NvarFun_letin_several=
type_NvarFun_letin_simple={id} est l'application de ℕ vers ℕ définie par {body}
type_NvarFun_sci_arg=
type_NvarFun_sci_dec=Soit f : ℕ→ℕ
type_NvarFun_sci_dec_body=Soit f : ℕ→ℕ définie par {body}
type_NvarFun_sci_exists_several=
type_NvarFun_sci_exists_simple=
type_NvarFun_sci_forall_several=
type_NvarFun_sci_forall_simple=
type_NvarFun_sci_letin_several=
type_NvarFun_sci_letin_simple={id} est l'application de ℕ vers ℕ définie par {body}
type_NvarProp_arg=
type_NvarProp_dec=Soit {id} la proposition définie sur ℕ
type_NvarProp_dec_body=Soit {id} la proposition définie au rang {var} par {fun_body}
type_NvarProp_exists_several=
type_NvarProp_exists_simple=
type_NvarProp_forall_several=
type_NvarProp_forall_simple=quelle que soit la proposition {id} définie sur ℕ,
type_NvarProp_letin_several=
type_NvarProp_letin_simple=
type_NvarProp_sci_arg=
type_NvarProp_sci_dec=Soit {id} la proposition définie sur ℕ
type_NvarProp_sci_dec_body=Soit {id} la proposition définie au rang {var} par {fun_body}
type_NvarProp_sci_exists_several=
type_NvarProp_sci_exists_simple=
type_NvarProp_sci_forall_several=
type_NvarProp_sci_forall_simple=quelle que soit la proposition {id} définie sur ℕ,
type_NvarProp_sci_letin_several=
type_NvarProp_sci_letin_simple=
type_NvarRel_arg=
type_NvarRel_dec=Soit {id} la proposition définie sur ℕ×ℕ
type_NvarRel_dec_body=
type_NvarRel_exists_several=
type_NvarRel_exists_simple=
type_NvarRel_forall_several=
type_NvarRel_forall_simple=quelle que soit {id} la proposition définie sur ℕ×ℕ,
type_NvarRel_letin_several=
type_NvarRel_letin_simple=
type_Nvar_arg=entier
type_Nvar_dec=Soit l'entier {id}
type_Nvar_dec_body=Soit l'entier {id} défini par {body}
type_Nvar_exists_several=il existe des entiers {id} tels que,
type_Nvar_exists_simple=il existe un entier {id} tel que,
type_Nvar_forall_several=quels que soient les entiers {id},
type_Nvar_forall_simple=quel que soit l'entier {id},
type_Nvar_letin_several=
type_Nvar_letin_simple=
type_Nvar_sci_arg=ℕ
type_Nvar_sci_dec=Soit {id} {math:∊} ℕ
type_Nvar_sci_dec_body=Soit {id}={body}
type_Nvar_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_Nvar_sci_exists_simple=∃ {id} {math:∊} ℕ,
type_Nvar_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_Nvar_sci_forall_simple=∀ {id} {math:∊} ℕ,
type_Nvar_sci_letin_several=
type_Nvar_sci_letin_simple=
type_O1BinRel_arg=relation binaire sur {0}
type_O1BinRel_dec=Soit {id} la relation binaire sur {0}
type_O1BinRel_dec_body=Soit {id} la relation binaire sur {0} définie par {body}
type_O1BinRel_exists_several=il existe {id} des relations binaires sur {0} telles que,
type_O1BinRel_exists_simple=il existe {id} une relation binaire sur {0} telle que,
type_O1BinRel_forall_several=quelles que soient {id} les relations binaires sur {0},
type_O1BinRel_forall_simple=quelle que soit {id} la relation binaire sur {0},
type_O1BinRel_letin_several=
type_O1BinRel_letin_simple=
type_O1BinRel_sci_arg=({0}×{0})
type_O1BinRel_sci_dec=Soit {id} ⊆ {0}×{0}
type_O1BinRel_sci_dec_body=Soit {id} une relation binaire sur {0} définie par {body}
type_O1BinRel_sci_exists_several=∃ {cartesian_id} ⊆ {cartesian_type},
type_O1BinRel_sci_exists_simple=∃ {id} ⊆ {0}×{0},
type_O1BinRel_sci_forall_several=∀ {cartesian_id} ⊆ {cartesian_type},
type_O1BinRel_sci_forall_simple=∀ {id} ⊆ {0}×{0},
type_O1BinRel_sci_letin_several=
type_O1BinRel_sci_letin_simple=
type_O1ExSet_arg=ensemble
type_O1ExSet_dec=Soit l'ensemble {id}
type_O1ExSet_dec_body=Soit l'ensemble {id}={body}
type_O1ExSet_exists_several=il existe les ensembles {id} tels que,
type_O1ExSet_exists_simple=il existe un ensemble {id} tel que,
type_O1ExSet_forall_several=quels que soient les ensembles {id},
type_O1ExSet_forall_simple=quel que soit l'ensemble {id},
type_O1ExSet_letin_several=
type_O1ExSet_letin_simple=
type_O1ExSet_sci_arg=ensemble
type_O1ExSet_sci_dec=Soit l'ensemble {id}
type_O1ExSet_sci_dec_body=Soit l'ensemble {id}={body}
type_O1ExSet_sci_exists_several=∃ {id},
type_O1ExSet_sci_exists_simple=∃ {id},
type_O1ExSet_sci_forall_several=quels que soient les ensembles {id},
type_O1ExSet_sci_forall_simple=quel que soit l'ensemble {id},
type_O1ExSet_sci_letin_several=
type_O1ExSet_sci_letin_simple=
type_O1Fun_arg=l'application de {0} vers {1}
type_O1Fun_dec=Soit {id} une application de {0} vers {1}
type_O1Fun_dec_body=Soit {id} une application de {0} vers {1} définie par {body}
type_O1Fun_exists_several=il existe {id} des applications de {0} vers {1} telles que,
type_O1Fun_exists_simple=il existe {id} une application de {0} vers {1} telle que,
type_O1Fun_forall_several=quelles que soient {id} les applications de {0} vers {1},
type_O1Fun_forall_simple=quelle que soit {id} l'application de {0} vers {1},
type_O1Fun_letin_several=
type_O1Fun_letin_simple=
type_O1Fun_sci_arg={0}→{1}
type_O1Fun_sci_dec=Soit {id} : {0}→{1}
type_O1Fun_sci_dec_body=Soit {id} : {0}→{1} définie par {body}
type_O1Fun_sci_exists_several=∃ {pair_id} : {0}→{1},
type_O1Fun_sci_exists_simple=∃ {id} : {0}→{1},
type_O1Fun_sci_forall_several=∀ {pair_id} : {0}→{1},
type_O1Fun_sci_forall_simple=∀ {id} : {0}→{1},
type_O1Fun_sci_letin_several=
type_O1Fun_sci_letin_simple=
type_O1Rel_arg=relation de {0}×{1}
type_O1Rel_dec=Soit la relation {id} définie sur {0}×{1}
type_O1Rel_dec_body=Soit la relation {id} définie sur {0}×{1} par {body}
type_O1Rel_exists_several=il existe {id} des relations définies sur {0}×{1} telles que,
type_O1Rel_exists_simple=il existe {id} une relation définie sur {0}×{1} telle que,
type_O1Rel_forall_several=quelles que soient {id} les relations définies sur {0}×{1},
type_O1Rel_forall_simple=quelle que soit {id} la relation définie sur {0}×{1},
type_O1Rel_letin_several=
type_O1Rel_letin_simple=
type_O1Rel_sci_arg=({0}×{1})
type_O1Rel_sci_dec=Soit {id} ⊆ {0}×{1}
type_O1Rel_sci_dec_body=Soit {id} ⊆ {0}×{1} définie par {body}
type_O1Rel_sci_exists_several=∃ {cartesian_id} ⊆ {cartesian_type},
type_O1Rel_sci_exists_simple=∃ {id} ⊆ {0}×{1},
type_O1Rel_sci_forall_several=∀ {cartesian_id} ⊆ {cartesian_type},
type_O1Rel_sci_forall_simple=∀ {id} ⊆ {0}×{1},
type_O1Rel_sci_letin_several=
type_O1Rel_sci_letin_simple=
type_O1SetProp2_arg=formule
type_O1SetProp2_dec=Soit la formule {id}
type_O1SetProp2_dec_body=Soit {id} la formule définie par {body}
type_O1SetProp2_exists_several=il existe des formules {id} telles que,
type_O1SetProp2_exists_simple=il existe une formule {id} telle que,
type_O1SetProp2_forall_several=quelles que soient les formules {id},
type_O1SetProp2_forall_simple=quelle que soit la formule {id},
type_O1SetProp2_letin_several=
type_O1SetProp2_letin_simple=
type_O1SetProp2_sci_arg=formule
type_O1SetProp2_sci_dec=Soit la formule {id}
type_O1SetProp2_sci_dec_body=Soit {id} la formule définie par {body}
type_O1SetProp2_sci_exists_several=il existe des formules {id} telle que,
type_O1SetProp2_sci_exists_simple=il existe une formule {id} telle que,
type_O1SetProp2_sci_forall_several=quelles que soient les formules {id},
type_O1SetProp2_sci_forall_simple=quelle que soit la formule {id},
type_O1SetProp2_sci_letin_several=
type_O1SetProp2_sci_letin_simple=
type_O1SetProp_arg=formule
type_O1SetProp_dec=Soit la formule {id}
type_O1SetProp_dec_body=Soit {id} la formule définie par {body}
type_O1SetProp_exists_several=il existe des formules {id} telles que,
type_O1SetProp_exists_simple=il existe une formule {id} telle que,
type_O1SetProp_forall_several=quelles que soient les formules {id},
type_O1SetProp_forall_simple=quelle que soit la formule {id},
type_O1SetProp_letin_several=
type_O1SetProp_letin_simple=
type_O1U_arg=univers
type_O1U_dec=Soit l'élément {id}
type_O1U_dec_body=Soit l'élément {id} de valeur {body}
type_O1U_exists_several=il existe des éléments {id} tels que
type_O1U_exists_simple=il existe un élément {id} tel que
type_O1U_forall_several=quels que soient les éléments {id},
type_O1U_forall_simple=quel que soit l'élément {id},
type_O1U_letin_several=
type_O1U_letin_simple=
type_O1U_sci_arg=univers
type_O1U_sci_dec=Soit l'élément {id}
type_O1U_sci_dec_body=Soit {id}={body}
type_O1U_sci_exists_several=∃ {id},
type_O1U_sci_exists_simple=∃ {id},
type_O1U_sci_forall_several=∀ {id},
type_O1U_sci_forall_simple=∀ {id},
type_O1U_sci_letin_several=
type_O1U_sci_letin_simple=
type_PHITYPE_arg=
type_PHITYPE_dec=
type_PHITYPE_dec_body=
type_PHITYPE_exists_several=
type_PHITYPE_exists_simple=
type_PHITYPE_forall_several=
type_PHITYPE_forall_simple=
type_PHITYPE_letin_several=
type_PHITYPE_letin_simple={id} est la fonction de ℘({2}) vers ℘({0})×℘({1}) définie par {body}
type_PHITYPE_sci_arg=
type_PHITYPE_sci_dec=
type_PHITYPE_sci_dec_body=Soit {id} : ℘({2})→℘({0})×℘({1}) définie par {body}
type_PHITYPE_sci_exists_several=
type_PHITYPE_sci_exists_simple=
type_PHITYPE_sci_forall_several=
type_PHITYPE_sci_forall_simple=
type_PHITYPE_sci_letin_several=
type_PHITYPE_sci_letin_simple={id} : ℘({2})→℘({0})×℘({1}) définie par {body}
type_Point_arg=point
type_Point_dec=Soit le point {id}
type_Point_dec_body=Soit le point {id} défini par {body}
type_Point_exists_several=il existe des points {id} tels que,
type_Point_exists_simple=il existe un point {id} tel que,
type_Point_forall_several=quels que soient les points {id},
type_Point_forall_simple=quel que soit le point {id},
type_Point_letin_several=
type_Point_letin_simple=
type_Prop_arg=proposition
type_Prop_dec=Soit la proposition {id}
type_Prop_dec_body=Soit {id} la proposition définie par {body}
type_Prop_exists_several=il existe des propositions {id} telles que,
type_Prop_exists_simple=il existe une proposition {id} telle que,
type_Prop_forall_several=quelles que soient les propositions {id},
type_Prop_forall_simple=quelle que soit la proposition {id},
type_Prop_letin_several=
type_Prop_letin_simple=
type_Rel_arg=({2}×{3})
type_Rel_dec=Soit {id} une relation de {2}×{3}
type_Rel_dec_body=Soit {id} une relation de {2}×{3} définie par {body}
type_Rel_exists_several=il existe {id} des relations de {2}×{3} telles que,
type_Rel_exists_simple=il existe {id} une relation de {2}×{3} telle que,
type_Rel_forall_several=quelles que soient {id} les relations de {2}×{3},
type_Rel_forall_simple=quelle que soit {id} la relation de {2}×{3},
type_Rel_letin_several=
type_Rel_letin_simple=
type_Rel_sci_arg=({2}×{3})
type_Rel_sci_dec=Soit {id} ⊆ {2}×{3}
type_Rel_sci_dec_body=Soit {id} une relation de {2}×{3} définie par {body}
type_Rel_sci_exists_several=∃ {cartesian_id} ⊆ {cartesian_type},
type_Rel_sci_exists_simple=∃ {id} ⊆ {2}×{3},
type_Rel_sci_forall_several=∀ {cartesian_id} ⊆ {cartesian_type},
type_Rel_sci_forall_simple=∀ {id} ⊆ {2}×{3},
type_Rel_sci_letin_several=
type_Rel_sci_letin_simple=
type_Series_arg=suite
type_Series_dec=Soit la suite {id}
type_Series_dec_body=Soit {id} la suite définie sur {0} par {body} {dom_serie}
type_Series_exists_several=il existe des suites {id} telles que,
type_Series_exists_simple=il existe une suite {id} telle que,
type_Series_forall_several=quelles que soient les suites {id},
type_Series_forall_simple=quelle que soit la suite {id},
type_Series_letin_several=
type_Series_letin_simple={id} est la suite définie sur {0} par {body}
type_SetProp2_arg=
type_SetProp2_dec=Soit {id} la proposition définie sur {0}
type_SetProp2_dec_body=
type_SetProp2_exists_several=
type_SetProp2_exists_simple=
type_SetProp2_forall_several=quelles que soient {id} les propositions définies sur {0},
type_SetProp2_forall_simple=quelle que soit {id} les propositions définies sur {0},
type_SetProp2_letin_several=
type_SetProp2_letin_simple=
type_SetProp2_sci_arg=
type_SetProp2_sci_dec=soit {id} la proposition définie sur {0}
type_SetProp2_sci_dec_body=
type_SetProp2_sci_exists_several=
type_SetProp2_sci_exists_simple=
type_SetProp2_sci_forall_several=quelles que soient {id} les propositions définies sur {0},
type_SetProp2_sci_forall_simple=quelle que soit {id} les propositions définies sur {0},
type_SetProp2_sci_letin_several=
type_SetProp2_sci_letin_simple=
type_SetProp_arg=
type_SetProp_dec=Soit {id} la proposition définie sur {0}
type_SetProp_dec_body=
type_SetProp_exists_several=
type_SetProp_exists_simple=
type_SetProp_forall_several=quelles que soient {id} les propositions définies sur {0},
type_SetProp_forall_simple=quelle que soit {id} les propositions définies sur {0},
type_SetProp_letin_several=
type_SetProp_letin_simple=
type_UA_arg=A
type_UA_dec=Soit {type} {id}
type_UA_dec_body=Soit {type} {id} = {body}
type_UA_exists_several=∃ {id} {math:∊} {cartesian_type},
type_UA_exists_simple=∃ {id} {math:∊} {type},
type_UA_forall_several=∀ {id} {math:∊} {cartesian_type},
type_UA_forall_simple=∀ {id} {math:∊} {type},
type_UA_letin_several=
type_UA_letin_simple=
type_UA_sci_arg=A
type_UA_sci_dec=Soit {id} {math:∊} A
type_UA_sci_dec_body=Soit {id} = {body}
type_UA_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_UA_sci_exists_simple=∃ {id} {math:∊} {type},
type_UA_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_UA_sci_forall_simple=∀ {id} {math:∊} {type},
type_UA_sci_letin_several=
type_UA_sci_letin_simple=
type_UB_arg=B
type_UB_dec=Soit {type} {id}
type_UB_dec_body=Soit {type} {id} = {body}
type_UB_exists_several=∃ {id} {math:∊} {cartesian_type},
type_UB_exists_simple=∃ {id} {math:∊} {type},
type_UB_forall_several=∀ {id} {math:∊} {cartesian_type},
type_UB_forall_simple=∀ {id} {math:∊} {type},
type_UB_letin_several=
type_UB_letin_simple=
type_UB_sci_arg=B
type_UB_sci_dec=Soit {id} {math:∊} B
type_UB_sci_dec_body=Soit {id} = {body}
type_UB_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_UB_sci_exists_simple=∃ {id} {math:∊} {type},
type_UB_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_UB_sci_forall_simple=∀ {id} {math:∊} {type},
type_UB_sci_letin_several=
type_UB_sci_letin_simple=
type_UC_arg=C
type_UC_dec=Soit {type} {id}
type_UC_dec_body=Soit {type} {id} = {body}
type_UC_exists_several=∃ {id} {math:∊} {cartesian_type},
type_UC_exists_simple=∃ {id} {math:∊} {type},
type_UC_forall_several=∀ {id} {math:∊} {cartesian_type},
type_UC_forall_simple=∀ {id} {math:∊} {type},
type_UC_letin_several=
type_UC_letin_simple=
type_UC_sci_arg=C
type_UC_sci_dec=Soit {id} {math:∊} C
type_UC_sci_dec_body=Soit {id} = {body}
type_UC_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_UC_sci_exists_simple=∃ {id} {math:∊} {type},
type_UC_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_UC_sci_forall_simple=∀ {id} {math:∊} {type},
type_UC_sci_letin_several=
type_UC_sci_letin_simple=
type_UE_arg=E
type_UE_dec=Soit {type} {id}
type_UE_dec_body=Soit {type} {id} = {body}
type_UE_exists_several=∃ {id} {math:∊} {cartesian_type},
type_UE_exists_simple=∃ {id} {math:∊} {type},
type_UE_forall_several=∀ {id} {math:∊} {cartesian_type},
type_UE_forall_simple=∀ {id} {math:∊} {type},
type_UE_letin_several=
type_UE_letin_simple=
type_UE_sci_arg=E
type_UE_sci_dec=Soit {id} {math:∊} E
type_UE_sci_dec_body=Soit {id} = {body}
type_UE_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_UE_sci_exists_simple=∃ {id} {math:∊} {type},
type_UE_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_UE_sci_forall_simple=∀ {id} {math:∊} {type},
type_UE_sci_letin_several=
type_UE_sci_letin_simple=
type_U_arg={id}
type_U_dec=Soit {type} {id}
type_U_dec_body=Soit {type} {id} = {body}
type_U_exists_several=∃ {id} {math:∊} {cartesian_type},
type_U_exists_simple=∃ {id} {math:∊} {type},
type_U_forall_several=∀ {id} {math:∊} {cartesian_type},
type_U_forall_simple=∀ {id} {math:∊} {type},
type_U_letin_several=
type_U_letin_simple=
type_U_sci_arg={id}
type_U_sci_dec=Soit {id} {math:∊} {type}
type_U_sci_dec_body=Soit {id} = {body}
type_U_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_U_sci_exists_simple=∃ {id} {math:∊} {type},
type_U_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_U_sci_forall_simple=∀ {id} {math:∊} {type},
type_U_sci_letin_several=
type_U_sci_letin_simple=
type_Universe_arg=univers
type_Universe_dec=Soit l'univers {id}
type_Universe_dec_body=Soit {id} l'univers défini par {body}
type_Universe_exists_several=il existe des univers {id} tels que,
type_Universe_exists_simple=il existe un univers {id} tel que
type_Universe_forall_several=quels que soient les univers {id},
type_Universe_forall_simple=quel que soit l'univers {id},
type_Universe_letin_several=
type_Universe_letin_simple=
type_WearingHat_arg=porteur de chapeau
type_WearingHat_dec=Soit le porteur de chapeau {id}
type_WearingHat_dec_body=
type_WearingHat_exists_several=il existe des porteurs de chapeau {id} tels que
type_WearingHat_exists_simple=il existe un porteur de chapeau {id} tel que
type_WearingHat_forall_several=quels que soient les porteurs de chapeau {id},
type_WearingHat_forall_simple=quel que soit le porteur de chapeau {id},
type_WearingHat_letin_several=
type_WearingHat_letin_simple=
type_gbmember_arg=habitant
type_gbmember_dec=Soit l'habitant {id}
type_gbmember_dec_body=
type_gbmember_exists_several=il existe
type_gbmember_exists_simple=il existe un habitant {id} tel que
type_gbmember_forall_several=quels que soient les habitants {id},
type_gbmember_forall_simple=quel que soit l'habitant {id},
type_gbmember_letin_several=
type_gbmember_letin_simple=
type_gbmember_sci_arg=habitant
type_gbmember_sci_dec=Soit l'habitant {id}
type_gbmember_sci_dec_body=
type_gbmember_sci_exists_several=il existe
type_gbmember_sci_exists_simple=il existe un habitant {id} tel que
type_gbmember_sci_forall_several=quels que soient les habitants {id},
type_gbmember_sci_forall_simple=quel que soit l'habitant {id},
type_gbmember_sci_letin_several=
type_gbmember_sci_letin_simple=
type_type_default_arg={id}
type_type_default_dec=Soit {type} {id}
type_type_default_dec_body=Soit {type} {id} = {body}
type_type_default_exists_several=∃ {id} {math:∊} {cartesian_type},
type_type_default_exists_simple=∃ {id} {math:∊} {type},
type_type_default_forall_several=∀ {id} {math:∊} {cartesian_type},
type_type_default_forall_simple=∀ {id} {math:∊} {type},
type_type_default_letin_several=
type_type_default_letin_simple=
type_type_default_sci_arg={id}
type_type_default_sci_dec=Soit {id} {math:∊} {type}
type_type_default_sci_dec_body=Soit {id} = {body}
type_type_default_sci_exists_several=∃ {pair_id} {math:∊} {cartesian_type},
type_type_default_sci_exists_simple=∃ {id} {math:∊} {type},
type_type_default_sci_forall_several=∀ {pair_id} {math:∊} {cartesian_type},
type_type_default_sci_forall_simple=∀ {id} {math:∊} {type},
type_type_default_sci_letin_several=
type_type_default_sci_letin_simple=
